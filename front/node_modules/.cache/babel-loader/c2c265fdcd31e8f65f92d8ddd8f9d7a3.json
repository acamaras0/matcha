{"ast":null,"code":"var _jsxFileName = \"/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/front/src/components/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport logo from \"../assets/logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = () => {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const {\n    token\n  } = useParams();\n  const [message, setMessage] = useState(\"\");\n  const [cookie, setCookie] = useCookies([\"refreshToken\"]);\n  const history = useHistory();\n\n  const ResetPassword = async e => {\n    e.preventDefault();\n\n    try {\n      await axios.post(`http://localhost:5000/resetpassword/${token}`, {\n        password: password,\n        confPassword: confirmPassword,\n        token: token\n      });\n      history.push(\"/\");\n    } catch (error) {\n      if (error.response) {\n        setMessage(error.response.data.msg);\n      }\n    }\n  };\n\n  if (cookie.refreshToken) {\n    history.push(\"/dashboard\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Auth-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Auth-form\",\n        onSubmit: ResetPassword,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Auth-form-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"Auth-form-title\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control mt-1\",\n              type: \"password\",\n              placeholder: \"Password...\",\n              onChange: e => {\n                setPassword(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control mt-1\",\n              type: \"password\",\n              placeholder: \"Confirm password...\",\n              onChange: e => {\n                setConfirmPassword(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-warning\",\n            children: \" Submit \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"forgot-password text-right mt-2\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:3000/\",\n            children: \"Return\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPassword, \"kcrwWE1bKOadSwuzAjA02Dz5ya4=\", true, function () {\n  return [useParams, useHistory];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/front/src/components/ResetPassword.js"],"names":["React","axios","useState","useHistory","useParams","logo","ResetPassword","password","setPassword","confirmPassword","setConfirmPassword","token","message","setMessage","cookie","setCookie","useCookies","history","e","preventDefault","post","confPassword","push","error","response","data","msg","refreshToken","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport logo from \"../assets/logo.png\";\n\nconst ResetPassword = () => {\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const { token } = useParams();\n  const [message, setMessage] = useState(\"\");\n  const [cookie, setCookie] = useCookies([\"refreshToken\"]);\n  const history = useHistory();\n\n  const ResetPassword = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post(`http://localhost:5000/resetpassword/${token}`, {\n        password: password,\n        confPassword: confirmPassword,\n        token: token,\n      });\n      history.push(\"/\");\n    } catch (error) {\n      if (error.response) {\n        setMessage(error.response.data.msg);\n      }\n    }\n  };\n\n  if (cookie.refreshToken) {\n    history.push(\"/dashboard\");\n  }\n  return (\n    <div>\n      <div className=\"logo\">\n        <img src={logo} alt=\"logo\" />\n      </div>\n      <div className=\"Auth-form-container\">\n        <form className=\"Auth-form\" onSubmit={ResetPassword}>\n          <div className=\"Auth-form-content\">\n            <h3 className=\"Auth-form-title\">Reset Password</h3>\n            <div className=\"form-group mt-3\">\n              <input\n                className=\"form-control mt-1\"\n                type=\"password\"\n                placeholder=\"Password...\"\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n              />\n            </div>\n            <br />\n            <div className=\"form-group mt-3\">\n              <input\n                className=\"form-control mt-1\"\n                type=\"password\"\n                placeholder=\"Confirm password...\"\n                onChange={(e) => {\n                  setConfirmPassword(e.target.value);\n                }}\n              />\n            </div>\n            <br />\n            <button className=\"btn btn-outline-warning\"> Submit </button>\n          </div>\n          <br />\n          <p className=\"error\">{message}</p>\n          <p className=\"forgot-password text-right mt-2\">\n            <a href=\"http://localhost:3000/\">Return</a>\n          </p>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}