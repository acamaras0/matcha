{"ast":null,"code":"var _jsxFileName = \"/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/front/src/components/ProfileRandom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\nimport useGetDistance from \"../utils/useGetDistance\";\nimport StarRating from \"../models/StarRating\";\nimport ImageGallery from \"react-image-gallery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileRandom = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    selectedUser,\n    setSelectedUser\n  } = useContext(UserContext);\n  const [token, setToken] = useState(\"\");\n  const [expire, setExpire] = useState(\"\");\n  const history = useHistory();\n  const distance = useGetDistance();\n  useEffect(() => {\n    refreshToken();\n    getPicsById();\n\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/users/${id}`);\n        setSelectedUser(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const refreshToken = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setExpire(decoded.exp);\n    } catch (error) {\n      if (error.response) {\n        history.push(\"/\");\n      }\n    }\n  }; //   const axiosJWT = axios.create();\n  //   axiosJWT.interceptors.request.use(\n  //     async (config) => {\n  //       const currentDate = new Date();\n  //       if (expire * 1000 < currentDate.getTime()) {\n  //         const response = await axios.get(\"http://localhost:5000/token\");\n  //         config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n  //         setToken(response.data.accessToken);\n  //         const decoded = jwt_decode(response.data.accessToken);\n  //         setExpire(decoded.exp);\n  //       }\n  //       return config;\n  //     },\n  //     (error) => {\n  //       return Promise.reject(error);\n  //     }\n  //   );\n\n\n  var userID = useParams().id;\n  var location = { ...distance\n  };\n\n  if (location[userID - 1]) {\n    var getDistance = location[userID - 1].distance / 1000;\n  }\n\n  if (!selectedUser) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: [selectedUser.firstname, \" \", selectedUser.lastname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n          rating: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageGallery, {\n          items: selectedUser.profile_pic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"card-img-top\",\n            src: selectedUser.profile_pic,\n            alt: \"Card cap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: selectedUser.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [getDistance, \" km away\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: selectedUser.birthdate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Bio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: selectedUser.bio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: selectedUser.gender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Interests\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: selectedUser.interests\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(ProfileRandom, \"DJ2zojSSYGDbMsa0rAIJAR5ZWOQ=\", false, function () {\n  return [useParams, useHistory, useGetDistance, useParams];\n});\n\n_c = ProfileRandom;\nexport default ProfileRandom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileRandom\");","map":{"version":3,"sources":["/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/front/src/components/ProfileRandom.js"],"names":["React","useContext","useEffect","useState","useParams","useHistory","UserContext","jwt_decode","axios","useGetDistance","StarRating","ImageGallery","ProfileRandom","id","selectedUser","setSelectedUser","token","setToken","expire","setExpire","history","distance","refreshToken","getPicsById","fetchData","response","get","data","error","console","log","accessToken","decoded","exp","push","userID","location","getDistance","firstname","lastname","profile_pic","username","birthdate","bio","gender","interests"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAST,SAAS,EAAxB;AACA,QAAM;AAAEU,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAoCd,UAAU,CAACK,WAAD,CAApD;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMiB,OAAO,GAAGf,UAAU,EAA1B;AACA,QAAMgB,QAAQ,GAAGZ,cAAc,EAA/B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,YAAY;AACZC,IAAAA,WAAW;;AAEX,UAAMC,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAW,+BAA8Bb,EAAG,EAA5C,CAAvB;AACAE,QAAAA,eAAe,CAACU,QAAQ,CAACE,IAAV,CAAf;AACD,OAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,KAPD;;AAQAJ,IAAAA,SAAS;AACV,GAbQ,EAaN,EAbM,CAAT;;AAeA,QAAMF,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAMG,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAU,6BAAV,CAAvB;AACAT,MAAAA,QAAQ,CAACQ,QAAQ,CAACE,IAAT,CAAcI,WAAf,CAAR;AACA,YAAMC,OAAO,GAAGzB,UAAU,CAACkB,QAAQ,CAACE,IAAT,CAAcI,WAAf,CAA1B;AACAZ,MAAAA,SAAS,CAACa,OAAO,CAACC,GAAT,CAAT;AACD,KALD,CAKE,OAAOL,KAAP,EAAc;AACd,UAAIA,KAAK,CAACH,QAAV,EAAoB;AAClBL,QAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACD;AACF;AACF,GAXD,CAvB0B,CAoC1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAIC,MAAM,GAAG/B,SAAS,GAAGS,EAAzB;AACA,MAAIuB,QAAQ,GAAG,EAAE,GAAGf;AAAL,GAAf;;AACA,MAAIe,QAAQ,CAACD,MAAM,GAAG,CAAV,CAAZ,EAAyB;AACvB,QAAIE,WAAW,GAAGD,QAAQ,CAACD,MAAM,GAAG,CAAV,CAAR,CAAqBd,QAArB,GAAgC,IAAlD;AACD;;AACD,MAAI,CAACP,YAAL,EAAmB;AACjB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO;AACL,wBACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,qBACGA,YAAY,CAACwB,SADhB,OAC4BxB,YAAY,CAACyB,QADzC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AAAY,UAAA,MAAM,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,YAAD;AAAc,UAAA,KAAK,EAAEzB,YAAY,CAAC0B;AAAlC;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,cADZ;AAEE,YAAA,GAAG,EAAE1B,YAAY,CAAC0B,WAFpB;AAGE,YAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4B1B,YAAY,CAAC2B;AAAzC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAG,cAAA,SAAS,EAAC,WAAb;AAAA,yBAA0BJ,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAG,cAAA,SAAS,EAAC,WAAb;AAAA,wBAA0BvB,YAAY,CAAC4B;AAAvC;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAG,cAAA,SAAS,EAAC,WAAb;AAAA,wBAA0B5B,YAAY,CAAC6B;AAAvC;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE;AAAG,cAAA,SAAS,EAAC,WAAb;AAAA,wBAA0B7B,YAAY,CAAC8B;AAAvC;AAAA;AAAA;AAAA;AAAA,oBARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,eAUE;AAAG,cAAA,SAAS,EAAC,WAAb;AAAA,wBAA0B9B,YAAY,CAAC+B;AAAvC;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA8BD;AACF,CA7FD;;GAAMjC,a;UACWR,S,EAICC,U,EACCI,c,EAgDJL,S;;;KAtDTQ,a;AA+FN,eAAeA,aAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\nimport useGetDistance from \"../utils/useGetDistance\";\nimport StarRating from \"../models/StarRating\";\nimport ImageGallery from \"react-image-gallery\";\n\nconst ProfileRandom = () => {\n  const { id } = useParams();\n  const { selectedUser, setSelectedUser } = useContext(UserContext);\n  const [token, setToken] = useState(\"\");\n  const [expire, setExpire] = useState(\"\");\n  const history = useHistory();\n  const distance = useGetDistance();\n\n  useEffect(() => {\n    refreshToken();\n    getPicsById()\n\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/users/${id}`);\n        setSelectedUser(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const refreshToken = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setExpire(decoded.exp);\n    } catch (error) {\n      if (error.response) {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  //   const axiosJWT = axios.create();\n\n  //   axiosJWT.interceptors.request.use(\n  //     async (config) => {\n  //       const currentDate = new Date();\n  //       if (expire * 1000 < currentDate.getTime()) {\n  //         const response = await axios.get(\"http://localhost:5000/token\");\n  //         config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n  //         setToken(response.data.accessToken);\n  //         const decoded = jwt_decode(response.data.accessToken);\n  //         setExpire(decoded.exp);\n  //       }\n  //       return config;\n  //     },\n  //     (error) => {\n  //       return Promise.reject(error);\n  //     }\n  //   );\n  var userID = useParams().id;\n  var location = { ...distance };\n  if (location[userID - 1]){\n    var getDistance = location[userID - 1].distance / 1000;\n  }\n  if (!selectedUser) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <div>\n        <div className=\"text-center\">\n          <h2 className=\"text-center\">\n            {selectedUser.firstname} {selectedUser.lastname}\n          </h2>\n          <StarRating rating={3} />\n          <ImageGallery items={selectedUser.profile_pic}/>\n          <div className=\"card-profile\">\n            <img\n              className=\"card-img-top\"\n              src={selectedUser.profile_pic}\n              alt=\"Card cap\"\n            />\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{selectedUser.username}</h5>\n              <p className=\"card-text\">{getDistance} km away</p>\n              <label>Age</label>\n              <p className=\"card-text\">{selectedUser.birthdate}</p>\n              <label>Bio</label>\n              <p className=\"card-text\">{selectedUser.bio}</p>\n              <label>Gender</label>\n              <p className=\"card-text\">{selectedUser.gender}</p>\n              <label>Interests</label>\n              <p className=\"card-text\">{selectedUser.interests}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default ProfileRandom;\n"]},"metadata":{},"sourceType":"module"}