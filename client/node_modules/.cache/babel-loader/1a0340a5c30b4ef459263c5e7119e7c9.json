{"ast":null,"code":"var _jsxFileName = \"/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/client/src/components/ResetPassword/ResetPassword.js\";\nimport React, { useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Avatar, Button, CssBaseline, TextField, Link, Grid, Typography, Container } from '@material-ui/core';\nimport ReportProblemSharpIcon from '@material-ui/icons/ReportProblemSharp';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Form from \"react-validation/build/form\";\nimport authAction from '../../actions/resetPassword';\nimport Alert from \"@material-ui/lab/Alert\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst ResetPassword = props => {\n  const classes = useStyles();\n  const form = useRef();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const {\n    message\n  } = useSelector(state => state.message);\n  const [successful, setSuccessful] = useState(false);\n  const dispatch = useDispatch();\n\n  const onChangePassword = e => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const onChangeConfirmPassword = e => {\n    const confirmPassword = e.target.value;\n    setConfirmPassword(confirmPassword);\n  };\n\n  const handleResetPassword = e => {\n    e.preventDefault();\n    setSuccessful(false);\n    form.current.validateAll();\n    dispatch(authAction.resetPassword(password, confirmPassword)).then(() => {\n      setSuccessful(true);\n    }).catch(() => {\n      setSuccessful(false);\n    });\n  };\n\n  if (successful) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ReportProblemSharpIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"Reset Password\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleResetPassword,\n    ref: form,\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, !successful && /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"New Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    color: \"secondary\",\n    value: password,\n    onChange: onChangePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"confirm-password\",\n    label: \"Confirm Password\",\n    type: \"password\",\n    id: \"confirm-password\",\n    autoComplete: \"current-password\",\n    color: \"secondary\",\n    value: confirmPassword,\n    onChange: onChangeConfirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"Please fill in your new password and confirm it!\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, \"Reset your password\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    href: \"/login\",\n    variant: \"body2\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 29\n    }\n  }, \"Back to Sign in\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    href: \"/signup\",\n    variant: \"body2\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, \"Don't have an account? Sign Up\"))), message && /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }, message))));\n};\n\nexport default ResetPassword;","map":{"version":3,"sources":["/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/client/src/components/ResetPassword/ResetPassword.js"],"names":["React","useRef","useState","useDispatch","useSelector","Redirect","Avatar","Button","CssBaseline","TextField","Link","Grid","Typography","Container","ReportProblemSharpIcon","makeStyles","Form","authAction","Alert","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","ResetPassword","props","classes","password","setPassword","confirmPassword","setConfirmPassword","message","state","successful","setSuccessful","dispatch","onChangePassword","e","target","value","onChangeConfirmPassword","handleResetPassword","preventDefault","current","validateAll","resetPassword","then","catch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,QAAsC,OAAtC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SACIC,MADJ,EAEIC,MAFJ,EAGIC,WAHJ,EAIIC,SAJJ,EAKIC,IALJ,EAMIC,IANJ,EAOIC,UAPJ,EAQIC,SARJ,QASO,mBATP;AAUA,OAAOC,sBAAP,MAAmC,uCAAnC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADR;AAEHC,IAAAA,OAAO,EAAE,MAFN;AAGHC,IAAAA,aAAa,EAAE,QAHZ;AAIHC,IAAAA,UAAU,EAAE;AAJT,GAD8B;AAOrCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,CADJ;AAEJM,IAAAA,eAAe,EAAET,KAAK,CAACU,OAAN,CAAcC,SAAd,CAAwBC;AAFrC,GAP6B;AAWrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEFZ,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AAFT,GAX+B;AAerCY,EAAAA,MAAM,EAAE;AACJP,IAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADJ;AAf6B,CAAZ,CAAD,CAA5B;;AAoBA,MAAMa,aAAa,GAAIC,KAAD,IAAW;AAC7B,QAAMC,OAAO,GAAGnB,SAAS,EAAzB;AACA,QAAMc,IAAI,GAAGhC,MAAM,EAAnB;AAEA,QAAM,CAACsC,QAAD,EAAWC,WAAX,IAA0BtC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACuC,eAAD,EAAkBC,kBAAlB,IAAwCxC,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM;AAAEyC,IAAAA;AAAF,MAAcvC,WAAW,CAACwC,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA/B;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8B5C,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAM6C,QAAQ,GAAG5C,WAAW,EAA5B;;AAEA,QAAM6C,gBAAgB,GAAIC,CAAD,IAAO;AAC5B,UAAMV,QAAQ,GAAGU,CAAC,CAACC,MAAF,CAASC,KAA1B;AACAX,IAAAA,WAAW,CAACD,QAAD,CAAX;AACH,GAHD;;AAKA,QAAMa,uBAAuB,GAAIH,CAAD,IAAO;AACnC,UAAMR,eAAe,GAAGQ,CAAC,CAACC,MAAF,CAASC,KAAjC;AACAT,IAAAA,kBAAkB,CAACD,eAAD,CAAlB;AACH,GAHD;;AAKA,QAAMY,mBAAmB,GAAIJ,CAAD,IAAO;AAC/BA,IAAAA,CAAC,CAACK,cAAF;AAEAR,IAAAA,aAAa,CAAC,KAAD,CAAb;AAEAb,IAAAA,IAAI,CAACsB,OAAL,CAAaC,WAAb;AAEAT,IAAAA,QAAQ,CAAC9B,UAAU,CAACwC,aAAX,CAAyBlB,QAAzB,EAAmCE,eAAnC,CAAD,CAAR,CAA8DiB,IAA9D,CAAmE,MAAM;AACrEZ,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH,KAFD,EAEGa,KAFH,CAES,MAAM;AACXb,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAJD;AAKH,GAZD;;AAcA,MAAID,UAAJ,EAAgB;AACZ,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,sBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACjB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEiB,OAAO,CAACX,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAOI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAE0B,mBAAhB;AAAqC,IAAA,GAAG,EAAEpB,IAA1C;AAAgD,IAAA,SAAS,EAAEK,OAAO,CAACL,IAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACY,UAAD,iBACG,oBAAC,SAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,MAAM,EAAC,QAFX;AAGI,IAAA,QAAQ,MAHZ;AAII,IAAA,SAAS,MAJb;AAKI,IAAA,IAAI,EAAC,UALT;AAMI,IAAA,KAAK,EAAC,cANV;AAOI,IAAA,IAAI,EAAC,UAPT;AAQI,IAAA,EAAE,EAAC,UARP;AASI,IAAA,YAAY,EAAC,kBATjB;AAUI,IAAA,KAAK,EAAC,WAVV;AAWI,IAAA,KAAK,EAAEN,QAXX;AAYI,IAAA,QAAQ,EAAES,gBAZd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,eAiBQ,oBAAC,SAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,MAAM,EAAC,QAFX;AAGI,IAAA,QAAQ,MAHZ;AAII,IAAA,SAAS,MAJb;AAKI,IAAA,IAAI,EAAC,kBALT;AAMI,IAAA,KAAK,EAAC,kBANV;AAOI,IAAA,IAAI,EAAC,UAPT;AAQI,IAAA,EAAE,EAAC,kBARP;AASI,IAAA,YAAY,EAAC,kBATjB;AAUI,IAAA,KAAK,EAAC,WAVV;AAWI,IAAA,KAAK,EAAEP,eAXX;AAYI,IAAA,QAAQ,EAAEW,uBAZd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBR,eA+BI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDA/BJ,eAkCI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,OAAO,EAAC,WAHZ;AAII,IAAA,KAAK,EAAC,WAJV;AAKI,IAAA,SAAS,EAAEd,OAAO,CAACH,MALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAlCJ,eA2CI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,OAAO,EAAC,OAA5B;AAAoC,IAAA,KAAK,EAAC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ,eAMI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,OAAO,EAAC,OAA7B;AAAqC,IAAA,KAAK,EAAC,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,gCADL,CADJ,CANJ,CA3CJ,EAuDKQ,OAAO,iBACJ,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAC,OAAhB;AAAwB,IAAA,IAAI,EAAC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,OADL,CAxDR,CAPJ,CAFJ,CADJ;AA0EH,CAjHD;;AAmHA,eAAeP,aAAf","sourcesContent":["import React, {useRef, useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    Link,\n    Grid,\n    Typography,\n    Container,\n} from '@material-ui/core';\nimport ReportProblemSharpIcon from '@material-ui/icons/ReportProblemSharp';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Form from \"react-validation/build/form\";\nimport authAction from '../../actions/resetPassword';\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst ResetPassword = (props) => {\n    const classes = useStyles();\n    const form = useRef();\n\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const { message } = useSelector(state => state.message);\n    const [successful, setSuccessful] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const onChangePassword = (e) => {\n        const password = e.target.value;\n        setPassword(password);\n    }\n\n    const onChangeConfirmPassword = (e) => {\n        const confirmPassword = e.target.value;\n        setConfirmPassword(confirmPassword);\n    }\n\n    const handleResetPassword = (e) => {\n        e.preventDefault();\n\n        setSuccessful(false);\n\n        form.current.validateAll();\n\n        dispatch(authAction.resetPassword(password, confirmPassword)).then(() => {\n            setSuccessful(true);\n        }).catch(() => {\n            setSuccessful(false);\n        })\n    };\n\n    if (successful) {\n        return <Redirect to=\"/login\" />;\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <ReportProblemSharpIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Reset Password\n                </Typography>\n                <Form onSubmit={handleResetPassword} ref={form} className={classes.form} >\n                    {!successful && (\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"New Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            color=\"secondary\"\n                            value={password}\n                            onChange={onChangePassword}\n                        />\n                    )}\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"confirm-password\"\n                            label=\"Confirm Password\"\n                            type=\"password\"\n                            id=\"confirm-password\"\n                            autoComplete=\"current-password\"\n                            color=\"secondary\"\n                            value={confirmPassword}\n                            onChange={onChangeConfirmPassword}\n                        />\n                    <Typography variant=\"subtitle2\">\n                        Please fill in your new password and confirm it!\n                    </Typography>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.submit}\n                    >\n                        Reset your password\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"/login\" variant=\"body2\" color=\"secondary\">\n                                Back to Sign in\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"/signup\" variant=\"body2\" color=\"secondary\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                    {message && (\n                        <Alert severity=\"error\" role=\"alert\">\n                            {message}\n                        </Alert>\n                    )}\n                </Form>\n            </div>\n        </Container>\n    );\n}\n\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}