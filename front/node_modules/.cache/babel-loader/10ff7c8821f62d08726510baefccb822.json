{"ast":null,"code":"// import React, { useContext, useEffect, useState } from \"react\";\n// import { useParams, useHistory } from \"react-router-dom\";\n// import { UserContext } from \"../context/UserContext\";\n// import jwt_decode from \"jwt-decode\";\n// import axios from \"axios\";\n// import StarRating from \"../models/StarRating\";\n// import Footer from \"../models/Footer\";\n// const ProfileRandom = () => {\n//   const { id } = useParams();\n//   const { selectedUser, setSelectedUser } = useContext(UserContext);\n//   const [token, setToken] = useState(\"\");\n//   const [expire, setExpire] = useState(\"\");\n//   const history = useHistory();\n//   useEffect(() => {\n//     refreshToken();\n//     const fetchData = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/users/${id}`);\n//         setSelectedUser(response.data);\n//       } catch (error) {\n//         console.log(error);\n//       }\n//     };\n//     fetchData();\n//   }, []);\n//   const refreshToken = async () => {\n//     try {\n//       const response = await axios.get(\"http://localhost:5000/token\");\n//       setToken(response.data.accessToken);\n//       const decoded = jwt_decode(response.data.accessToken);\n//       setExpire(decoded.exp);\n//     } catch (error) {\n//       if (error.response) {\n//         history.push(\"/\");\n//       }\n//     }\n//   };\n//   //   const axiosJWT = axios.create();\n//   //   axiosJWT.interceptors.request.use(\n//   //     async (config) => {\n//   //       const currentDate = new Date();\n//   //       if (expire * 1000 < currentDate.getTime()) {\n//   //         const response = await axios.get(\"http://localhost:5000/token\");\n//   //         config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n//   //         setToken(response.data.accessToken);\n//   //         const decoded = jwt_decode(response.data.accessToken);\n//   //         setExpire(decoded.exp);\n//   //       }\n//   //       return config;\n//   //     },\n//   //     (error) => {\n//   //       return Promise.reject(error);\n//   //     }\n//   //   );\n//   if (!selectedUser) {\n//     return <div>Loading...</div>;\n//   } else {\n//     return (\n//       <div>\n//         <div className=\"text-center\">\n//           <h2 className=\"text-center\">\n//             {selectedUser.firstname} {selectedUser.lastname}\n//           </h2>\n//           <StarRating rating={3} />\n//           <div className=\"card-profile\">\n//             <img\n//               className=\"card-img-top\"\n//               src={selectedUser.profile_pic}\n//               alt=\"Card cap\"\n//             />\n//             <div className=\"card-body\">\n//               <h5 className=\"card-title\">{selectedUser.username}</h5>\n//               <label>Age</label>\n//               <p className=\"card-text\">{selectedUser.birthdate}</p>\n//               <label>Bio</label>\n//               <p className=\"card-text\">{selectedUser.bio}</p>\n//               <label>Gender</label>\n//               <p className=\"card-text\">{selectedUser.gender}</p>\n//               <label>Location</label>\n//               <p className=\"card-text\">{selectedUser.city}</p>\n//               <label>Interests</label>\n//               <p className=\"card-text\">{selectedUser.interests}</p>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// };\n// export default ProfileRandom;","map":{"version":3,"sources":["/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/front/src/components/ProfileRandom.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useContext, useEffect, useState } from \"react\";\n// import { useParams, useHistory } from \"react-router-dom\";\n// import { UserContext } from \"../context/UserContext\";\n// import jwt_decode from \"jwt-decode\";\n// import axios from \"axios\";\n// import StarRating from \"../models/StarRating\";\n// import Footer from \"../models/Footer\";\n\n// const ProfileRandom = () => {\n//   const { id } = useParams();\n//   const { selectedUser, setSelectedUser } = useContext(UserContext);\n//   const [token, setToken] = useState(\"\");\n//   const [expire, setExpire] = useState(\"\");\n//   const history = useHistory();\n\n//   useEffect(() => {\n//     refreshToken();\n\n//     const fetchData = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/users/${id}`);\n//         setSelectedUser(response.data);\n//       } catch (error) {\n//         console.log(error);\n//       }\n//     };\n//     fetchData();\n//   }, []);\n\n//   const refreshToken = async () => {\n//     try {\n//       const response = await axios.get(\"http://localhost:5000/token\");\n//       setToken(response.data.accessToken);\n//       const decoded = jwt_decode(response.data.accessToken);\n//       setExpire(decoded.exp);\n//     } catch (error) {\n//       if (error.response) {\n//         history.push(\"/\");\n//       }\n//     }\n//   };\n\n//   //   const axiosJWT = axios.create();\n\n//   //   axiosJWT.interceptors.request.use(\n//   //     async (config) => {\n//   //       const currentDate = new Date();\n//   //       if (expire * 1000 < currentDate.getTime()) {\n//   //         const response = await axios.get(\"http://localhost:5000/token\");\n//   //         config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n//   //         setToken(response.data.accessToken);\n//   //         const decoded = jwt_decode(response.data.accessToken);\n//   //         setExpire(decoded.exp);\n//   //       }\n//   //       return config;\n//   //     },\n//   //     (error) => {\n//   //       return Promise.reject(error);\n//   //     }\n//   //   );\n\n//   if (!selectedUser) {\n//     return <div>Loading...</div>;\n//   } else {\n//     return (\n//       <div>\n//         <div className=\"text-center\">\n//           <h2 className=\"text-center\">\n//             {selectedUser.firstname} {selectedUser.lastname}\n//           </h2>\n//           <StarRating rating={3} />\n//           <div className=\"card-profile\">\n//             <img\n//               className=\"card-img-top\"\n//               src={selectedUser.profile_pic}\n//               alt=\"Card cap\"\n//             />\n//             <div className=\"card-body\">\n//               <h5 className=\"card-title\">{selectedUser.username}</h5>\n//               <label>Age</label>\n//               <p className=\"card-text\">{selectedUser.birthdate}</p>\n//               <label>Bio</label>\n//               <p className=\"card-text\">{selectedUser.bio}</p>\n//               <label>Gender</label>\n//               <p className=\"card-text\">{selectedUser.gender}</p>\n//               <label>Location</label>\n//               <p className=\"card-text\">{selectedUser.city}</p>\n//               <label>Interests</label>\n//               <p className=\"card-text\">{selectedUser.interests}</p>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// };\n\n// export default ProfileRandom;\n"]},"metadata":{},"sourceType":"module"}