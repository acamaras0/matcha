{"ast":null,"code":"var _jsxFileName = \"/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/client/src/components/ProfileCreation/CreateProfileFields.js\";\nimport React from 'react';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport { genderList } from \"./ProfileFormUtils\";\nimport Switch from \"@material-ui/core/Switch\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from \"@material-ui/core/CardContent\";\nconst useStyles = makeStyles(() => ({\n  gridList: {\n    display: 'inline-block'\n  }\n}));\nconst RedText = withStyles({\n  root: {\n    color: \"#FF0000\"\n  }\n})(Typography);\nexport const ChooseGender = ({\n  gender,\n  handleChange\n}) => /*#__PURE__*/React.createElement(FormControl, {\n  component: \"fieldset\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FormLabel, {\n  color: \"secondary\",\n  component: \"legend\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }\n}, \"Your gender\"), /*#__PURE__*/React.createElement(RadioGroup, {\n  \"aria-label\": \"gender\",\n  name: \"gender1\",\n  value: gender,\n  onChange: handleChange('gender'),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(FormControlLabel, {\n  value: \"man\",\n  control: /*#__PURE__*/React.createElement(Radio, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 52\n    }\n  }),\n  label: \"Man\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(FormControlLabel, {\n  value: \"woman\",\n  control: /*#__PURE__*/React.createElement(Radio, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 54\n    }\n  }),\n  label: \"Woman\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(FormControlLabel, {\n  value: \"other\",\n  control: /*#__PURE__*/React.createElement(Radio, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 54\n    }\n  }),\n  label: \"Other\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }\n})));\nexport const ChoosePreferredGender = ({\n  gender,\n  preferences,\n  handleSwitch\n}) => /*#__PURE__*/React.createElement(FormControl, {\n  component: \"fieldset\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FormLabel, {\n  color: \"secondary\",\n  component: \"legend\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }\n}, \"Your preferred gender(s)\"), /*#__PURE__*/React.createElement(FormGroup, {\n  row: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }\n}, genderList.map((gender, index) => /*#__PURE__*/React.createElement(FormControlLabel, {\n  key: index,\n  label: gender,\n  control: /*#__PURE__*/React.createElement(Switch, {\n    checked: preferences.indexOf(gender) !== -1,\n    onChange: () => handleSwitch(gender),\n    edge: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 44\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 17\n  }\n}))));\nexport const Bio = ({\n  bio,\n  handleChange\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(TextField, {\n  color: \"secondary\",\n  id: \"bio\",\n  onChange: handleChange('bio'),\n  value: bio,\n  placeholder: \"Write a short bio here!\",\n  variant: \"filled\",\n  multiline: true,\n  rows: 8,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }\n}), bio.length > 140 ? /*#__PURE__*/React.createElement(RedText, {\n  variant: \"subtitle2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 15\n  }\n}, bio.length, \" \") : /*#__PURE__*/React.createElement(Typography, {\n  variant: \"subtitle2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 15\n  }\n}, bio.length, \" \"), /*#__PURE__*/React.createElement(Typography, {\n  variant: \"subtitle2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }\n}, \" / 140\"));\nexport const ChooseTags = ({\n  handleListItem,\n  tagList,\n  initialTags\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(List, {\n    className: classes.gridList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }\n  }, initialTags.map((tag, index) => /*#__PURE__*/React.createElement(ListItem, {\n    key: index,\n    onClick: () => handleListItem(tag.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    edge: \"start\",\n    checked: tagList.indexOf(tag.id) !== -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }), \"#\", tag.tag)));\n};\nexport const PictureDropZone = ({\n  handleUpload,\n  initialFiles,\n  handleDelete\n}) => {\n  if (!initialFiles) initialFiles = [];\n  return /*#__PURE__*/React.createElement(DropzoneArea, {\n    acceptedFiles: ['image/png', 'image/jpg', 'image/jpeg'],\n    maxFileSize: 47000000,\n    filesLimit: 5,\n    initialFiles: initialFiles,\n    clearOnUnmount: true,\n    onChange: async files => handleUpload(files),\n    onDelete: () => handleDelete('profilePic'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  });\n};\nexport const FinalPage = ({\n  formData\n}) => {\n  // why don't we sketch a 'tinder card' here?\n  const {\n    profilePic,\n    preferences,\n    bio,\n    tagList,\n    gender\n  } = formData;\n  return /*#__PURE__*/React.createElement(Card, {\n    style: {\n      height: '80vh',\n      width: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 12\n    }\n  }, profilePic[0] ? /*#__PURE__*/React.createElement(CardMedia, {\n    image: profilePic[0],\n    style: {\n      height: '80%',\n      width: '80%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, \"need to add a skeleton here\"), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"So you're a \", gender, \" looking for company from \", preferences.map(pref => `${pref}s `), \"interested in \", tagList.map(tag => `${tag} `), \" with the bio \", bio, \". Is that correct?\")));\n};","map":{"version":3,"sources":["/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/client/src/components/ProfileCreation/CreateProfileFields.js"],"names":["React","FormControl","FormLabel","RadioGroup","FormControlLabel","Radio","FormGroup","genderList","Switch","TextField","Typography","withStyles","List","ListItem","Checkbox","DropzoneArea","makeStyles","Card","CardMedia","CardContent","useStyles","gridList","display","RedText","root","color","ChooseGender","gender","handleChange","ChoosePreferredGender","preferences","handleSwitch","map","index","indexOf","Bio","bio","length","ChooseTags","handleListItem","tagList","initialTags","classes","tag","id","PictureDropZone","handleUpload","initialFiles","handleDelete","files","FinalPage","formData","profilePic","height","width","pref"],"mappings":"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","sourcesContent":["import React from 'react'\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport {genderList} from \"./ProfileFormUtils\";\nimport Switch from \"@material-ui/core/Switch\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport {DropzoneArea} from \"material-ui-dropzone\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from \"@material-ui/core/CardContent\";\n\nconst useStyles = makeStyles(() => ({\n    gridList: {\n        display: 'inline-block',\n    },\n  }));\n\nconst RedText = withStyles({\n    root: {\n        color: \"#FF0000\"\n    }\n})(Typography);\n\n\nexport const ChooseGender = ({gender, handleChange}) =>\n    <FormControl component=\"fieldset\">\n        <FormLabel color='secondary' component=\"legend\">Your gender</FormLabel>\n        <RadioGroup aria-label=\"gender\" name=\"gender1\" value={gender} onChange={handleChange('gender')}>\n            <FormControlLabel value=\"man\" control={<Radio/>} label=\"Man\"/>\n            <FormControlLabel value=\"woman\" control={<Radio/>} label=\"Woman\"/>\n            <FormControlLabel value=\"other\" control={<Radio/>} label=\"Other\"/>\n        </RadioGroup>\n    </FormControl>\n\nexport const ChoosePreferredGender = ({gender, preferences, handleSwitch}) =>\n    <FormControl component=\"fieldset\">\n        <FormLabel color='secondary' component=\"legend\">Your preferred gender(s)</FormLabel>\n        <FormGroup row>\n            {genderList.map((gender, index) =>\n                <FormControlLabel key={index} label={gender}\n                                  control={<Switch checked={preferences.indexOf(gender) !== -1}\n                                                   onChange={() => handleSwitch(gender)} edge=\"end\"/>}/>\n            )}\n        </FormGroup>\n    </FormControl>\n\nexport const Bio = ({bio, handleChange}) =>\n    <div>\n        <TextField color='secondary' id=\"bio\" onChange={handleChange('bio')} value={bio}\n                   placeholder=\"Write a short bio here!\" variant=\"filled\" multiline rows={8}/>\n        {bio.length > 140\n            ? <RedText variant=\"subtitle2\">{bio.length} </RedText>\n            : <Typography variant=\"subtitle2\">{bio.length} </Typography>}\n        <Typography variant=\"subtitle2\"> / 140</Typography>\n    </div>\n\nexport const ChooseTags = ({handleListItem, tagList, initialTags}) => {\n    const classes = useStyles();\n\n    return <List className={classes.gridList}>\n        {initialTags.map((tag, index) =>\n            <ListItem key={index} onClick={() => handleListItem(tag.id)}>\n                <Checkbox edge=\"start\" checked={tagList.indexOf(tag.id) !== -1}/>\n                #{tag.tag}\n            </ListItem>\n        )}\n    </List>\n}\nexport const PictureDropZone = ({handleUpload, initialFiles, handleDelete}) => {\n    if (!initialFiles)\n        initialFiles = [];\n    return (\n        <DropzoneArea\n            acceptedFiles={['image/png', 'image/jpg', 'image/jpeg']}\n            maxFileSize={47000000}\n            filesLimit={5}\n            initialFiles={initialFiles}\n            clearOnUnmount={true}\n            onChange={async (files) => handleUpload(files)}\n            onDelete={() => handleDelete('profilePic')}\n        />\n    )\n}\n\nexport const FinalPage = ({formData}) => { // why don't we sketch a 'tinder card' here?\n    const {profilePic, preferences, bio, tagList, gender} = formData\n    return <Card style={{height: '80vh', width: 'auto'}}>\n        {profilePic[0]?\n            <CardMedia image={profilePic[0]} style={{height: '80%', width: '80%'}}/>\n            : <div>need to add a skeleton here</div>}\n        <CardContent>\n            <Typography>\n                So you're a {gender} looking for company from {preferences.map(pref => `${pref}s `)}\n                interested in {tagList.map(tag => `${tag} `)} with the bio {bio}.\n                Is that correct?\n            </Typography>\n        </CardContent>\n    </Card>\n}"]},"metadata":{},"sourceType":"module"}