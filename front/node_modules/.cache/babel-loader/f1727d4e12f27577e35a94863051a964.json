{"ast":null,"code":"var _jsxFileName = \"/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/front/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { useCookies } from \"react-cookie\";\nimport StarRating from \"../models/StarRating\";\nimport img from \"../assets/yellow-heart.png\";\nimport img1 from \"../assets/broken-heart.png\";\nimport useGetDistance from \"../utils/useGetDistance\";\nimport PopUp from \"../models/PopUp\";\nimport { format } from \"timeago.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = ({\n  socket,\n  user\n}) => {\n  _s();\n\n  const [loggedIn, setLoggedin] = useState(\"\");\n  const [sender, setSender] = useState(\"\");\n  const [senderId, setSenderId] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [cookie, setCookie] = useCookies([\"refreshToken\"]);\n  const [liked, setLiked] = useState(false);\n  const history = useHistory();\n  const distance = useGetDistance();\n  useEffect(() => {\n    getLoggedIn();\n    getUsers();\n  }, []);\n\n  const getUsers = async () => {\n    const response = await axios.get(`http://localhost:5000/users/info/${cookie.refreshToken}`, {});\n    setUsers(response.data);\n  };\n\n  const getLoggedIn = async () => {\n    const response = await axios.get(`http://localhost:5000/user/${cookie.refreshToken}`, {});\n    setLoggedin(response.data.id);\n    setSender(response.data.username);\n    setSenderId(response.data.id);\n  };\n\n  const handleMessage = text => {\n    socket.emit(\"sendText\", {\n      senderName: loggedIn,\n      receiverName: id,\n      text\n    });\n  };\n\n  const handleUserSelect = async id => {\n    socket.emit(\"sendNotification\", {\n      senderName: sender,\n      senderId: senderId,\n      receiverName: id,\n      type: \"profile view\"\n    });\n    history.push(`/users/${id}`);\n  };\n\n  const handleLike = async id => {\n    try {\n      const response = await axios.post(`http://localhost:5000/like/${loggedIn}/${id}`, {});\n      setMessage(response.data.msg);\n    } catch (error) {\n      if (error.response) {\n        console.log(\"error\", error.response.data);\n      }\n    }\n\n    socket.emit(\"sendNotification\", {\n      senderName: sender,\n      senderId: senderId,\n      receiverName: id,\n      type: \"like\"\n    }); // socket.emit(\"sendNotification\", {\n    //   senderName: sender,\n    //   senderId: senderId,\n    //   receiverName: id,\n    //   type: \"match\",\n    // });\n  };\n\n  const handleDislike = async id => {\n    try {\n      const response = await axios.post(`http://localhost:5000/like/${loggedIn}/${id}`, {});\n      setMessage(response.data.msg);\n    } catch (error) {\n      if (error.response) {\n        console.log(\"error\", error.response.data);\n      }\n    }\n\n    socket.emit(\"sendNotification\", {\n      senderName: sender,\n      senderId: senderId,\n      receiverName: id,\n      type: \"unlike\"\n    });\n  };\n\n  const handleReport = async id => {\n    try {\n      const response = await axios.post(`http://localhost:5000/report/${loggedIn}/${id}`);\n      setMessage(response.data.msg);\n    } catch (error) {\n      if (error.response) console.log(\"error\", error.response.data);\n    }\n  };\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const f1 = id => {\n    togglePopup();\n    handleLike(id);\n    setLiked(true);\n  };\n\n  const f2 = id => {\n    togglePopup();\n    handleDislike(id);\n    setLiked(false);\n  };\n\n  if (!cookie.refreshToken) {\n    history.push(\"/\");\n  }\n\n  if (distance) {\n    distance.sort((a, b) => a.distance - b.distance);\n  }\n\n  if (users.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: distance && // eslint-disable-next-line\n      distance.map(user => {\n        if (user.profile_pic) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card mb-4\",\n            style: {\n              width: \"20rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row no-gutters\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  onClick: () => handleUserSelect(user.id),\n                  className: \"card-img img-fluid\",\n                  src: user.profile_pic,\n                  alt: \"Card cap\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-8\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title\",\n                    children: [user.username, \", \", user.birthdate, \" \", user.online === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"online\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"offline\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n                    rating: user.fame\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 59\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-text\",\n                    children: [\"About \", Math.round(user.distance / 1000), \" km away\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Gender\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-text\",\n                    children: user.gender\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Bio\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-text\",\n                    children: user.bio\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"heart-container\",\n                    children: liked ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"like-container\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        onClick: () => f2(user.id),\n                        className: \"like\",\n                        src: img,\n                        alt: \"Card cap\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"dislike-container\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        onClick: () => f1(user.id),\n                        className: \"dislike\",\n                        src: img1,\n                        alt: \"Card cap\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                      onClick: () => handleReport(user.id),\n                      className: \"report\",\n                      children: \"Report fake account\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"report\",\n                      children: [\"Last seen \", format(user.updated_at)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this)\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isOpen && /*#__PURE__*/_jsxDEV(PopUp, {\n        content: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this)\n        }, void 0, false),\n        handleClose: togglePopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"ZbXIeWNiib87qAenm55S8Wcr84Y=\", false, function () {\n  return [useCookies, useHistory, useGetDistance];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/front/src/components/Dashboard.js"],"names":["React","useState","useEffect","axios","useHistory","useCookies","StarRating","img","img1","useGetDistance","PopUp","format","Dashboard","socket","user","loggedIn","setLoggedin","sender","setSender","senderId","setSenderId","users","setUsers","message","setMessage","isOpen","setIsOpen","cookie","setCookie","liked","setLiked","history","distance","getLoggedIn","getUsers","response","get","refreshToken","data","id","username","handleMessage","text","emit","senderName","receiverName","handleUserSelect","type","push","handleLike","post","msg","error","console","log","handleDislike","handleReport","togglePopup","f1","f2","sort","a","b","length","map","profile_pic","width","birthdate","online","fame","Math","round","gender","bio","updated_at"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { useCookies } from \"react-cookie\";\nimport StarRating from \"../models/StarRating\";\nimport img from \"../assets/yellow-heart.png\";\nimport img1 from \"../assets/broken-heart.png\";\nimport useGetDistance from \"../utils/useGetDistance\";\nimport PopUp from \"../models/PopUp\";\nimport { format } from \"timeago.js\";\n\nconst Dashboard = ({ socket, user }) => {\n  const [loggedIn, setLoggedin] = useState(\"\");\n  const [sender, setSender] = useState(\"\");\n  const [senderId, setSenderId] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [cookie, setCookie] = useCookies([\"refreshToken\"]);\n  const [liked, setLiked] = useState(false);\n  const history = useHistory();\n  const distance = useGetDistance();\n\n  useEffect(() => {\n    getLoggedIn();\n    getUsers();\n  }, []);\n\n  const getUsers = async () => {\n    const response = await axios.get(\n      `http://localhost:5000/users/info/${cookie.refreshToken}`,\n      {}\n    );\n    setUsers(response.data);\n  };\n\n  const getLoggedIn = async () => {\n    const response = await axios.get(\n      `http://localhost:5000/user/${cookie.refreshToken}`,\n      {}\n    );\n    setLoggedin(response.data.id);\n    setSender(response.data.username);\n    setSenderId(response.data.id);\n  };\n  const handleMessage = (text) => {\n    socket.emit(\"sendText\", {\n      senderName: loggedIn,\n      receiverName: id,\n      text,\n    });\n  };\n\n  const handleUserSelect = async (id) => {\n    socket.emit(\"sendNotification\", {\n      senderName: sender,\n      senderId: senderId,\n      receiverName: id,\n      type: \"profile view\",\n    });\n    history.push(`/users/${id}`);\n  };\n\n  const handleLike = async (id) => {\n    try {\n      const response = await axios.post(\n        `http://localhost:5000/like/${loggedIn}/${id}`,\n        {}\n      );\n      setMessage(response.data.msg);\n    } catch (error) {\n      if (error.response) {\n        console.log(\"error\", error.response.data);\n      }\n    }\n    socket.emit(\"sendNotification\", {\n      senderName: sender,\n      senderId: senderId,\n      receiverName: id,\n      type: \"like\",\n    });\n    // socket.emit(\"sendNotification\", {\n    //   senderName: sender,\n    //   senderId: senderId,\n    //   receiverName: id,\n    //   type: \"match\",\n    // });\n  };\n\n  const handleDislike = async (id) => {\n    try {\n      const response = await axios.post(\n        `http://localhost:5000/like/${loggedIn}/${id}`,\n        {}\n      );\n      setMessage(response.data.msg);\n    } catch (error) {\n      if (error.response) {\n        console.log(\"error\", error.response.data);\n      }\n    }\n    socket.emit(\"sendNotification\", {\n      senderName: sender,\n      senderId: senderId,\n      receiverName: id,\n      type: \"unlike\",\n    });\n  };\n\n  const handleReport = async (id) => {\n    try {\n      const response = await axios.post(\n        `http://localhost:5000/report/${loggedIn}/${id}`\n      );\n      setMessage(response.data.msg);\n    } catch (error) {\n      if (error.response) console.log(\"error\", error.response.data);\n    }\n  };\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const f1 = (id) => {\n    togglePopup();\n    handleLike(id);\n    setLiked(true);\n  };\n  const f2 = (id) => {\n    togglePopup();\n    handleDislike(id);\n    setLiked(false);\n  };\n  if (!cookie.refreshToken) {\n    history.push(\"/\");\n  }\n  if (distance) {\n    distance.sort((a, b) => a.distance - b.distance);\n  }\n\n  if (users.length === 0)\n    return (\n      <div className=\"text-center\">\n        <p>Loading...</p>\n      </div>\n    );\n  return (\n    <div className=\"\">\n      <br />\n      <div className=\"dashboard\">\n        {distance &&\n          // eslint-disable-next-line\n          distance.map((user) => {\n            if (user.profile_pic) {\n              return (\n                <div\n                  key={user.id}\n                  className=\"card mb-4\"\n                  style={{ width: \"20rem\" }}\n                >\n                  <div className=\"row no-gutters\">\n                    <div>\n                      <img\n                        onClick={() => handleUserSelect(user.id)}\n                        className=\"card-img img-fluid\"\n                        src={user.profile_pic}\n                        alt=\"Card cap\"\n                      />\n                    </div>\n                    <div className=\"col-md-8\">\n                      <div className=\"card-body\">\n                        <h5 className=\"card-title\">\n                          {user.username}, {user.birthdate}{\" \"}\n                          {user.online === 1 ? (\n                            <p className=\"online\"></p>\n                          ) : (\n                            <p className=\"offline\"></p>\n                          )}\n                        </h5>\n                        <StarRating rating={user.fame} /> <br />\n                        <p className=\"card-text\">\n                          About {Math.round(user.distance / 1000)} km away\n                        </p>\n                        <label>Gender</label>\n                        <p className=\"card-text\">{user.gender}</p>\n                        <label>Bio</label>\n                        <p className=\"card-text\">{user.bio}</p>\n                        <div className=\"heart-container\">\n                          {liked ? (\n                            <div className=\"like-container\">\n                              <img\n                                onClick={() => f2(user.id)}\n                                className=\"like\"\n                                src={img}\n                                alt=\"Card cap\"\n                              />\n                            </div>\n                          ) : (\n                            <div className=\"dislike-container\">\n                              <img\n                                onClick={() => f1(user.id)}\n                                className=\"dislike\"\n                                src={img1}\n                                alt=\"Card cap\"\n                              />\n                            </div>\n                          )}\n                        </div>{\" \"}\n                        <br />\n                        <div className=\"text-center\">\n                          <a\n                            onClick={() => handleReport(user.id)}\n                            className=\"report\"\n                          >\n                            Report fake account\n                          </a>\n                          <p className=\"report\">\n                            Last seen {format(user.updated_at)}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            }\n          })}\n      </div>\n      <div>\n        {isOpen && (\n          <PopUp\n            content={\n              <>\n                <p className=\"message\">{message}</p>\n              </>\n            }\n            handleClose={togglePopup}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}