{"ast":null,"code":"var _jsxFileName = \"/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/front/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [loggedIn, setLoggedin] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [expire, setExpire] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [pics, setPics] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    refreshToken();\n    getUsers();\n    getLoggedIn();\n    getPicsById();\n  }, []);\n\n  const refreshToken = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setExpire(decoded.exp);\n    } catch (error) {\n      if (error.response) {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  const axiosJWT = axios.create();\n  axiosJWT.interceptors.request.use(async config => {\n    const currentDate = new Date();\n\n    if (expire * 1000 < currentDate.getTime()) {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n      setToken(response.data.accessToken); //console.log(\"token \",response.data.accessToken);\n\n      const decoded = jwt_decode(response.data.accessToken);\n      setExpire(decoded.exp);\n    }\n\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n\n  const getUsers = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/users/info\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setUsers(response.data);\n  };\n\n  const getLoggedIn = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/users\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setLoggedin(response.data);\n  };\n\n  const getPicsById = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/user/pictures\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setPics(response.data);\n  };\n\n  const handleUserSelect = async id => {\n    history.push(`/users/${id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Logged in as: \", loggedIn.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: [loggedIn.firstname, \" \", loggedIn.lastname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n        rating: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: users && users.map(user => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: () => handleUserSelect(user.id),\n              className: \"card-img-top\",\n              src: user.profile_pic,\n              alt: \"Card cap\"\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: user.birthdate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Bio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: user.bio\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: user.gender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: user.city\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Interests\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: user.interests\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"ldVS1fZFGTEZM76V/Y0fXiHGcc0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/front/src/components/Dashboard.js"],"names":["React","useState","useEffect","axios","jwt_decode","useHistory","Dashboard","loggedIn","setLoggedin","token","setToken","expire","setExpire","users","setUsers","pics","setPics","history","refreshToken","getUsers","getLoggedIn","getPicsById","response","get","data","accessToken","decoded","exp","error","push","axiosJWT","create","interceptors","request","use","config","currentDate","Date","getTime","headers","Authorization","Promise","reject","handleUserSelect","id","username","firstname","lastname","map","user","profile_pic","birthdate","bio","gender","city","interests"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Dashboard = () => {\n  const [loggedIn, setLoggedin] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [expire, setExpire] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [pics, setPics] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    refreshToken();\n    getUsers();\n    getLoggedIn();\n    getPicsById();\n  }, []);\n\n  const refreshToken = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setExpire(decoded.exp);\n    } catch (error) {\n      if (error.response) {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  const axiosJWT = axios.create();\n\n  axiosJWT.interceptors.request.use(\n    async (config) => {\n      const currentDate = new Date();\n      if (expire * 1000 < currentDate.getTime()) {\n        const response = await axios.get(\"http://localhost:5000/token\");\n        config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n        setToken(response.data.accessToken);\n        //console.log(\"token \",response.data.accessToken);\n        const decoded = jwt_decode(response.data.accessToken);\n        setExpire(decoded.exp);\n      }\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  const getUsers = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/users/info\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    setUsers(response.data);\n  };\n  const getLoggedIn = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/users\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    setLoggedin(response.data);\n  };\n\n  const getPicsById = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/user/pictures\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    setPics(response.data);\n  };\n\n  const handleUserSelect = async (id) => {\n    history.push(`/users/${id}`);\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h1>Logged in as: {loggedIn.username}</h1>\n      {/* <table className=\"table is-striped is-fullwidth\">\n        <thead>\n          <tr>\n            <th>Pic</th>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Birthdate</th>\n            <th>Gender</th>\n            <th>Sexual orientation</th>\n            <th>City</th>\n            <th>Online</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {users &&\n            users.map((user) => {\n              return (\n                <tr onClick={() => handleUserSelect(user.id)} key={user.id}>\n                  <td>\n                    <img src={user.profile_pic} width=\"300\" height=\"250\" />{\" \"}\n                  </td>\n                  <td>{user.username}</td>\n                  <td>{user.email}</td>\n                  <td>{user.birthdate}</td>\n                  <td>{user.gender}</td>\n                  <td>{user.orientation}</td>\n                  <td>{user.city}</td>\n                  <td>{user.online}</td>\n                </tr>\n              );\n            })}\n        </tbody> */}\n        <div className=\"text-center\">\n          <h2 className=\"text-center\">\n            {loggedIn.firstname} {loggedIn.lastname}\n          </h2>\n          <StarRating rating={5} />\n          <div className=\"card\">\n            {users &&\n              users.map((user) => {\n                return (\n                  <>\n                    <img\n                      onClick={() => handleUserSelect(user.id)}\n                      key={user.id}\n                      className=\"card-img-top\"\n                      src={user.profile_pic}\n                      alt=\"Card cap\"\n                    />\n                    <div className=\"card-body\">\n                      <h5 className=\"card-title\">{user.username}</h5>\n                      <label>Age</label>\n                      <p className=\"card-text\">{user.birthdate}</p>\n                      <label>Bio</label>\n                      <p className=\"card-text\">{user.bio}</p>\n                      <label>Gender</label>\n                      <p className=\"card-text\">{user.gender}</p>\n                      <label>Location</label>\n                      <p className=\"card-text\">{user.city}</p>\n                      <label>Interests</label>\n                      <p className=\"card-text\">{user.interests}</p>\n                    </div>\n                  </>\n                );\n              })}\n          </div>\n        </div>\n      {/* </table> */}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}