{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst useGeoLocation = () => {\n  _s();\n\n  const [location, setLocation] = useState({\n    loaded: false,\n    coordinates: {\n      lat: \"\",\n      lng: \"\"\n    }\n  });\n\n  const onSuccess = location => {\n    setLocation({\n      loaded: true,\n      coordinates: {\n        lat: location.coords.latitude,\n        lng: location.coords.longitude\n      }\n    });\n  };\n\n  const onError = error => {\n    setLocation({\n      loaded: true,\n      error\n    });\n  };\n\n  useEffect(() => {\n    if (!(\"geolocation\" in navigator)) {\n      onError({\n        code: 0,\n        message: \"Geolocation is not available\"\n      });\n      setLocation(state => ({ ...state,\n        loaded: true,\n        error: {\n          code: 0,\n          message: \"Geolocation is not supported by your browser\"\n        }\n      }));\n    }\n\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\n  }, []); // fetch(\n  //   \"https://maps.googleapis.com/maps/api/geocode/json?address=\" +\n  //     location.coordinates.lat +\n  //     \",\" +\n  //     location.coordinates.lng +\n  //     \"&key=AIzaSyDhF60vnq16OGzqjgpXj5WemUR1Eg4K6sU\"\n  // )\n  //   .then((response) => response.json())\n  //   .then((responseJson) => {\n  //     console.log(\n  //       \"ADDRESS GEOCODE is BACK!! => \" + JSON.stringify(responseJson)\n  //     );\n  //   });\n  // const geocoder = new window.google.maps.Geocoder();\n  // const my_location = {\n  //   lat: location.coordinates.lat,\n  //   lng: location.coordinates.lng,\n  // };\n\n  return location;\n};\n\n_s(useGeoLocation, \"3hDiZVb2uQPYqRJfdpSJpJ9Y568=\");\n\nexport default useGeoLocation;","map":{"version":3,"names":["useEffect","useState","useGeoLocation","location","setLocation","loaded","coordinates","lat","lng","onSuccess","coords","latitude","longitude","onError","error","navigator","code","message","state","geolocation","getCurrentPosition"],"sources":["/goinfre/acamaras/apache2/htdocs/my-app/src/utils/useGeoLocation.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useGeoLocation = () => {\n  const [location, setLocation] = useState({\n    loaded: false,\n    coordinates: { lat: \"\", lng: \"\" },\n  });\n\n  const onSuccess = (location) => {\n    setLocation({\n      loaded: true,\n      coordinates: {\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      },\n    });\n  };\n\n  const onError = (error) => {\n    setLocation({\n      loaded: true,\n      error,\n    });\n  };\n\n  useEffect(() => {\n    if (!(\"geolocation\" in navigator)) {\n      onError({\n        code: 0,\n        message: \"Geolocation is not available\",\n      });\n      setLocation((state) => ({\n        ...state,\n        loaded: true,\n        error: {\n          code: 0,\n          message: \"Geolocation is not supported by your browser\",\n        },\n      }));\n    }\n\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\n  }, []);\n\n  // fetch(\n  //   \"https://maps.googleapis.com/maps/api/geocode/json?address=\" +\n  //     location.coordinates.lat +\n  //     \",\" +\n  //     location.coordinates.lng +\n  //     \"&key=AIzaSyDhF60vnq16OGzqjgpXj5WemUR1Eg4K6sU\"\n  // )\n  //   .then((response) => response.json())\n  //   .then((responseJson) => {\n  //     console.log(\n  //       \"ADDRESS GEOCODE is BACK!! => \" + JSON.stringify(responseJson)\n  //     );\n  //   });\n  // const geocoder = new window.google.maps.Geocoder();\n  // const my_location = {\n  //   lat: location.coordinates.lat,\n  //   lng: location.coordinates.lng,\n  // };\n\n  return location;\n};\n\nexport default useGeoLocation;\n"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EAC3B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC;IACvCI,MAAM,EAAE,KAD+B;IAEvCC,WAAW,EAAE;MAAEC,GAAG,EAAE,EAAP;MAAWC,GAAG,EAAE;IAAhB;EAF0B,CAAD,CAAxC;;EAKA,MAAMC,SAAS,GAAIN,QAAD,IAAc;IAC9BC,WAAW,CAAC;MACVC,MAAM,EAAE,IADE;MAEVC,WAAW,EAAE;QACXC,GAAG,EAAEJ,QAAQ,CAACO,MAAT,CAAgBC,QADV;QAEXH,GAAG,EAAEL,QAAQ,CAACO,MAAT,CAAgBE;MAFV;IAFH,CAAD,CAAX;EAOD,CARD;;EAUA,MAAMC,OAAO,GAAIC,KAAD,IAAW;IACzBV,WAAW,CAAC;MACVC,MAAM,EAAE,IADE;MAEVS;IAFU,CAAD,CAAX;EAID,CALD;;EAOAd,SAAS,CAAC,MAAM;IACd,IAAI,EAAE,iBAAiBe,SAAnB,CAAJ,EAAmC;MACjCF,OAAO,CAAC;QACNG,IAAI,EAAE,CADA;QAENC,OAAO,EAAE;MAFH,CAAD,CAAP;MAIAb,WAAW,CAAEc,KAAD,KAAY,EACtB,GAAGA,KADmB;QAEtBb,MAAM,EAAE,IAFc;QAGtBS,KAAK,EAAE;UACLE,IAAI,EAAE,CADD;UAELC,OAAO,EAAE;QAFJ;MAHe,CAAZ,CAAD,CAAX;IAQD;;IAEDF,SAAS,CAACI,WAAV,CAAsBC,kBAAtB,CAAyCX,SAAzC,EAAoDI,OAApD;EACD,CAjBQ,EAiBN,EAjBM,CAAT,CAvB2B,CA0C3B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,OAAOV,QAAP;AACD,CA9DD;;GAAMD,c;;AAgEN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}