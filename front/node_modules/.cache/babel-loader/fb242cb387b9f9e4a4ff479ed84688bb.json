{"ast":null,"code":"var _jsxFileName = \"/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/front/src/components/Profile.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\nimport { EditText, EditTextarea } from 'react-edit-text';\nimport 'react-edit-text/dist/index.css';\nimport StarRating from \"../models/StarRating\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const [loggedIn, setLoggedin] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [expire, setExpire] = useState(\"\");\n  const [pics, setPics] = useState([]);\n  const history = useHistory();\n  const [toggle, setToggle] = useState(true);\n  const [text, setText] = useState(\"\");\n\n  function toggleInput() {\n    setToggle(false);\n  }\n\n  function handleChange(event) {\n    setText(event.target.value);\n  }\n\n  useEffect(() => {\n    refreshToken();\n    getLoggedIn();\n    getPicsById();\n  }, []);\n\n  const refreshToken = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setExpire(decoded.exp);\n    } catch (error) {\n      if (error.response) {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  const axiosJWT = axios.create();\n  axiosJWT.interceptors.request.use(async config => {\n    const currentDate = new Date();\n\n    if (expire * 1000 < currentDate.getTime()) {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n      setToken(response.data.accessToken); //console.log(\"token \",response.data.accessToken);\n\n      const decoded = jwt_decode(response.data.accessToken);\n      setExpire(decoded.exp);\n    }\n\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n\n  const getLoggedIn = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/users\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setLoggedin(response.data);\n  };\n\n  const getPicsById = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/user/pictures\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setPics(response.data);\n  };\n\n  if (pics.length > 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(EditText, {\n      name: \"textbox1\",\n      defaultValue: \"Click me to edit my text\",\n      inputClassName: \"bg-success form-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(EditTextarea, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: toggle ? /*#__PURE__*/_jsxDEV(\"p\", {\n        onDoubleClick: toggleInput,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n      rating: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card-img-top\",\n        src: pics[0].pic_path,\n        alt: \"Card cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: loggedIn.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: loggedIn.birthdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Bio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: loggedIn.bio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: loggedIn.gender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: loggedIn.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Interests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: loggedIn.interests\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          children: \"Edit Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading ... \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Profile, \"TrrE5eI/eyINIAmZeDMFlISfKYg=\", false, function () {\n  return [useHistory];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/front/src/components/Profile.js"],"names":["React","useState","useEffect","axios","jwt_decode","useHistory","EditText","EditTextarea","StarRating","Profile","loggedIn","setLoggedin","token","setToken","expire","setExpire","pics","setPics","history","toggle","setToggle","text","setText","toggleInput","handleChange","event","target","value","refreshToken","getLoggedIn","getPicsById","response","get","data","accessToken","decoded","exp","error","push","axiosJWT","create","interceptors","request","use","config","currentDate","Date","getTime","headers","Authorization","Promise","reject","length","pic_path","username","birthdate","bio","gender","city","interests"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\nimport { EditText, EditTextarea } from 'react-edit-text';\nimport 'react-edit-text/dist/index.css'\nimport StarRating from \"../models/StarRating\";\n\nconst Profile = () => {\n  const [loggedIn, setLoggedin] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [expire, setExpire] = useState(\"\");\n  const [pics, setPics] = useState([]);\n  const history = useHistory();\n\n  const [toggle, setToggle] =useState(true);\n  const [text, setText] = useState(\"\");\n\n  function toggleInput() {\n    setToggle(false);\n  }\n\n  function handleChange(event) {\n    setText(event.target.value);\n  }\n\n  useEffect(() => {\n    refreshToken();\n    getLoggedIn();\n    getPicsById();\n  }, []);\n\n  const refreshToken = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setExpire(decoded.exp);\n    } catch (error) {\n      if (error.response) {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  const axiosJWT = axios.create();\n\n  axiosJWT.interceptors.request.use(\n    async (config) => {\n      const currentDate = new Date();\n      if (expire * 1000 < currentDate.getTime()) {\n        const response = await axios.get(\"http://localhost:5000/token\");\n        config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n        setToken(response.data.accessToken);\n        //console.log(\"token \",response.data.accessToken);\n        const decoded = jwt_decode(response.data.accessToken);\n        setExpire(decoded.exp);\n      }\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  const getLoggedIn = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/users\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    setLoggedin(response.data);\n  };\n\n  const getPicsById = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/user/pictures\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    setPics(response.data);\n  };\n\n  if (pics.length > 0)\n    return (\n      <div className=\"text-center\">\n         <EditText                   name='textbox1'\n                  defaultValue='Click me to edit my text'\n                  inputClassName='bg-success form-control'\n/>\n        <EditTextarea />\n          <h2 className=\"text-center\">\n          {toggle ? (\n        <p onDoubleClick={toggleInput}>{text}</p>\n      ) : (\n        <input type=\"text\" value={text} onChange={handleChange} />\n      )}\n            {/* {loggedIn.firstname} {loggedIn.lastname} */}\n          </h2>\n        <StarRating rating={5} />\n        <div className=\"card-profile\">\n          <img className=\"card-img-top\" src={pics[0].pic_path} alt=\"Card cap\" />\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{loggedIn.username}</h5>\n            <label>Age</label>\n            <p className=\"card-text\">{loggedIn.birthdate}</p>\n            <label>Bio</label>\n            <p className=\"card-text\">{loggedIn.bio}</p>\n            <label>Gender</label>\n            <p className=\"card-text\">{loggedIn.gender}</p>\n            <label>Location</label>\n            <p className=\"card-text\">{loggedIn.city}</p>\n            <label>Interests</label>\n            <p className=\"card-text\">{loggedIn.interests}</p>\n            <button className=\"btn btn-warning\">Edit Profile</button>\n          </div>\n        </div>\n      </div>\n    );\n  return <div>Loading ... </div>;\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}