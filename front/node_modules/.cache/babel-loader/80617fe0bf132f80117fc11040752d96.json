{"ast":null,"code":"import classnames from 'classnames';\nimport React from 'react';\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport PropTypes from 'prop-types';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar styles = {\n  \"label\": \"_4GdcU\",\n  \"textareaView\": \"_G0k44\",\n  \"shared\": \"_i5--j\",\n  \"placeholder\": \"_TDklp\",\n  \"inline\": \"_gmkRL\",\n  \"readonly\": \"_-wzeg\",\n  \"displayContainer\": \"_IYz6Z\",\n  \"editButton\": \"_NGZSv\"\n};\nvar _excluded$1 = [\"props\", \"inputRef\", \"handleBlur\", \"handleKeydown\", \"handleFocus\", \"inputClassName\"];\n\nvar Input = function Input(_ref) {\n  var _classnames;\n\n  var _ref$props = _ref.props,\n      id = _ref$props.id,\n      inline = _ref$props.inline,\n      style = _ref$props.style,\n      type = _ref$props.type,\n      name = _ref$props.name,\n      inputRef = _ref.inputRef,\n      handleBlur = _ref.handleBlur,\n      handleKeydown = _ref.handleKeydown,\n      handleFocus = _ref.handleFocus,\n      inputClassName = _ref.inputClassName,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n\n  return /*#__PURE__*/jsx(\"input\", _extends({\n    id: id,\n    className: classnames(styles.shared, inputClassName, (_classnames = {}, _classnames[styles.inline] = inline, _classnames)),\n    style: style,\n    ref: inputRef,\n    type: type,\n    name: name,\n    onBlur: handleBlur,\n    onKeyDown: handleKeydown,\n    autoFocus: true,\n    onFocus: handleFocus\n  }, rest));\n};\n\nvar EditIcon = function EditIcon() {\n  return /*#__PURE__*/jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 512 512\",\n    children: /*#__PURE__*/jsx(\"path\", {\n      d: \"M421.7 220.3L188.5 453.4L154.6 419.5L158.1 416H112C103.2 416 96 408.8 96 400V353.9L92.51 357.4C87.78 362.2 84.31 368 82.42 374.4L59.44 452.6L137.6 429.6C143.1 427.7 149.8 424.2 154.6 419.5L188.5 453.4C178.1 463.8 165.2 471.5 151.1 475.6L30.77 511C22.35 513.5 13.24 511.2 7.03 504.1C.8198 498.8-1.502 489.7 .976 481.2L36.37 360.9C40.53 346.8 48.16 333.9 58.57 323.5L291.7 90.34L421.7 220.3zM492.7 58.75C517.7 83.74 517.7 124.3 492.7 149.3L444.3 197.7L314.3 67.72L362.7 19.32C387.7-5.678 428.3-5.678 453.3 19.32L492.7 58.75z\"\n    })\n  });\n};\n\nvar sharedDefaultProps = {\n  id: undefined,\n  name: undefined,\n  className: undefined,\n  value: undefined,\n  formatDisplayText: function formatDisplayText(x) {\n    return x;\n  },\n  defaultValue: undefined,\n  placeholder: '',\n  onSave: function onSave() {},\n  onChange: function onChange() {},\n  onEditMode: function onEditMode() {},\n  onBlur: function onBlur() {},\n  style: {},\n  readonly: false,\n  inputClassName: undefined\n};\nvar sharedPropTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  className: PropTypes.string,\n  value: PropTypes.string,\n  formatDisplayText: PropTypes.func,\n  defaultValue: PropTypes.string,\n  placeholder: PropTypes.string,\n  onSave: PropTypes.func,\n  onChange: PropTypes.func,\n  onEditMode: PropTypes.func,\n  onBlur: PropTypes.func,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  readonly: PropTypes.bool,\n  inputClassName: PropTypes.string\n};\n\nvar EditTextPropTypes = _extends({}, sharedPropTypes, {\n  type: PropTypes.string,\n  inline: PropTypes.bool,\n  showEditButton: PropTypes.bool,\n  editButtonContent: PropTypes.any,\n  editButtonProps: PropTypes.object\n});\n\nvar EditTextDefaultProps = _extends({}, sharedDefaultProps, {\n  type: 'text',\n  inline: false,\n  showEditButton: false,\n  editButtonContent: /*#__PURE__*/jsx(EditIcon, {}),\n  editButtonProps: {}\n});\n\nvar EditTextareaPropTypes = _extends({}, sharedPropTypes, {\n  rows: PropTypes.number\n});\n\nvar EditTextareaDefaultProps = _extends({}, sharedDefaultProps, {\n  rows: 3\n});\n\nfunction EditText(_ref) {\n  var id = _ref.id,\n      name = _ref.name,\n      className = _ref.className,\n      placeholder = _ref.placeholder,\n      inline = _ref.inline,\n      style = _ref.style,\n      readonly = _ref.readonly,\n      type = _ref.type,\n      value = _ref.value,\n      defaultValue = _ref.defaultValue,\n      formatDisplayText = _ref.formatDisplayText,\n      onEditMode = _ref.onEditMode,\n      _onChange = _ref.onChange,\n      onSave = _ref.onSave,\n      onBlur = _ref.onBlur,\n      showEditButton = _ref.showEditButton,\n      editButtonContent = _ref.editButtonContent,\n      editButtonProps = _ref.editButtonProps,\n      inputClassName = _ref.inputClassName;\n  var inputRef = React.useRef(null);\n\n  var _React$useState = React.useState({}),\n      changeEvent = _React$useState[0],\n      setChangeEvent = _React$useState[1];\n\n  var _React$useState2 = React.useState(''),\n      previousValue = _React$useState2[0],\n      setPreviousValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      savedText = _React$useState3[0],\n      setSavedText = _React$useState3[1];\n\n  var _React$useState4 = React.useState(false),\n      editMode = _React$useState4[0],\n      setEditMode = _React$useState4[1];\n\n  React.useEffect(function () {\n    if (defaultValue !== undefined) {\n      setPreviousValue(defaultValue);\n      setSavedText(defaultValue);\n    }\n  }, [defaultValue]);\n  React.useEffect(function () {\n    if (value !== undefined) {\n      setSavedText(value);\n\n      if (!editMode) {\n        setPreviousValue(value);\n      }\n    }\n  }, [value, editMode]);\n\n  var handleClickDisplay = function handleClickDisplay() {\n    if (readonly || showEditButton) return;\n    setEditMode(true);\n    onEditMode();\n  };\n\n  var handleClickEditButton = function handleClickEditButton() {\n    setEditMode(true);\n    onEditMode();\n  };\n\n  var handleBlur = function handleBlur(save) {\n    if (save === void 0) {\n      save = true;\n    }\n\n    if (inputRef.current) {\n      var _inputRef$current = inputRef.current,\n          inputName = _inputRef$current.name,\n          inputValue = _inputRef$current.value;\n\n      if (save && previousValue !== inputValue) {\n        onSave({\n          name: inputName,\n          value: inputValue,\n          previousValue: previousValue\n        });\n        setSavedText(inputValue);\n        setPreviousValue(inputValue);\n      } else if (!save) {\n        _onChange(_extends({}, changeEvent, {\n          target: changeEvent.target ? _extends({}, changeEvent.target, {\n            value: previousValue\n          }) : {\n            value: previousValue\n          }\n        }));\n      }\n\n      setEditMode(false);\n      onBlur();\n    }\n  };\n\n  var handleKeydown = function handleKeydown(e) {\n    if (e.keyCode === 13 || e.charCode === 13) {\n      handleBlur();\n    } else if (e.keyCode === 27 || e.charCode === 27) {\n      handleBlur(false);\n    }\n  };\n\n  var handleFocus = function handleFocus(e) {\n    if (type === 'text') {\n      e.currentTarget.setSelectionRange(e.currentTarget.value.length, e.currentTarget.value.length);\n    }\n  };\n\n  var renderDisplayMode = function renderDisplayMode() {\n    var _classnames, _classnames2;\n\n    return /*#__PURE__*/jsxs(\"div\", {\n      className: classnames(styles.displayContainer, (_classnames = {}, _classnames[styles.inline] = inline, _classnames)),\n      children: [/*#__PURE__*/jsx(\"div\", {\n        id: id,\n        className: classnames(styles.label, styles.shared, (_classnames2 = {}, _classnames2[styles.placeholder] = placeholder && !savedText, _classnames2[styles.inline] = inline, _classnames2[styles.readonly] = readonly || showEditButton, _classnames2), className),\n        onClick: handleClickDisplay,\n        style: style,\n        \"aria-label\": \"display component\",\n        children: formatDisplayText(savedText) || placeholder\n      }), showEditButton && !readonly && /*#__PURE__*/jsx(\"button\", _extends({\n        type: \"button\",\n        className: styles.editButton\n      }, editButtonProps, {\n        onClick: handleClickEditButton,\n        children: editButtonContent\n      }))]\n    });\n  };\n\n  var renderEditMode = function renderEditMode(controlled) {\n    var _sharedProps;\n\n    var sharedProps = (_sharedProps = {\n      inputRef: inputRef,\n      handleBlur: handleBlur,\n      handleKeydown: handleKeydown,\n      handleFocus: handleFocus,\n      props: {\n        id: id,\n        inline: inline,\n        style: style,\n        type: type,\n        name: name\n      }\n    }, _sharedProps['aria-label'] = 'input component', _sharedProps);\n    return controlled ? /*#__PURE__*/jsx(Input, _extends({}, sharedProps, {\n      value: value,\n      onChange: function onChange(e) {\n        setChangeEvent(e);\n\n        _onChange(e);\n      },\n      inputClassName: inputClassName\n    })) : /*#__PURE__*/jsx(Input, _extends({}, sharedProps, {\n      defaultValue: savedText,\n      inputClassName: inputClassName\n    }));\n  };\n\n  return !readonly && editMode ? renderEditMode(value !== undefined && _onChange !== undefined) : renderDisplayMode();\n}\n\nEditText.defaultProps = EditTextDefaultProps;\nEditText.propTypes = EditTextPropTypes;\nvar _excluded = [\"props\", \"inputRef\", \"handleBlur\", \"handleKeydown\", \"inputClassName\"];\n\nvar Textarea = function Textarea(_ref) {\n  var _ref$props = _ref.props,\n      id = _ref$props.id,\n      rows = _ref$props.rows,\n      style = _ref$props.style,\n      name = _ref$props.name,\n      inputRef = _ref.inputRef,\n      handleBlur = _ref.handleBlur,\n      handleKeydown = _ref.handleKeydown,\n      inputClassName = _ref.inputClassName,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/jsx(\"textarea\", _extends({\n    id: id,\n    className: classnames(styles.shared, inputClassName),\n    style: style,\n    ref: inputRef,\n    rows: rows,\n    name: name,\n    onBlur: handleBlur,\n    onKeyDown: handleKeydown,\n    autoFocus: true,\n    onFocus: function onFocus(e) {\n      return e.currentTarget.setSelectionRange(e.currentTarget.value.length, e.currentTarget.value.length);\n    }\n  }, rest));\n};\n\nvar splitLines = function splitLines(val) {\n  return val ? val.split(/\\r?\\n/) : [];\n};\n\nfunction EditTextarea(_ref) {\n  var id = _ref.id,\n      rows = _ref.rows,\n      name = _ref.name,\n      className = _ref.className,\n      placeholder = _ref.placeholder,\n      style = _ref.style,\n      readonly = _ref.readonly,\n      value = _ref.value,\n      defaultValue = _ref.defaultValue,\n      formatDisplayText = _ref.formatDisplayText,\n      onEditMode = _ref.onEditMode,\n      _onChange = _ref.onChange,\n      onSave = _ref.onSave,\n      onBlur = _ref.onBlur,\n      inputClassName = _ref.inputClassName;\n  var inputRef = React.useRef(null);\n\n  var _React$useState = React.useState({}),\n      changeEvent = _React$useState[0],\n      setChangeEvent = _React$useState[1];\n\n  var _React$useState2 = React.useState(''),\n      previousValue = _React$useState2[0],\n      setPreviousValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      savedText = _React$useState3[0],\n      setSavedText = _React$useState3[1];\n\n  var _React$useState4 = React.useState(false),\n      editMode = _React$useState4[0],\n      setEditMode = _React$useState4[1];\n\n  React.useEffect(function () {\n    if (defaultValue !== undefined) {\n      setPreviousValue(defaultValue);\n      setSavedText(defaultValue);\n    }\n  }, [defaultValue]);\n  React.useEffect(function () {\n    if (value !== undefined) {\n      setSavedText(value);\n\n      if (!editMode) {\n        setPreviousValue(value);\n      }\n    }\n  }, [value, editMode]);\n\n  var handleClick = function handleClick() {\n    if (readonly) return;\n    setEditMode(true);\n    onEditMode();\n  };\n\n  var handleBlur = function handleBlur(save) {\n    if (save === void 0) {\n      save = true;\n    }\n\n    if (inputRef.current) {\n      var _inputRef$current = inputRef.current,\n          inputName = _inputRef$current.name,\n          inputValue = _inputRef$current.value;\n\n      if (save && previousValue !== inputValue) {\n        onSave({\n          name: inputName,\n          value: inputValue,\n          previousValue: previousValue\n        });\n        setSavedText(inputValue);\n        setPreviousValue(inputValue);\n      } else if (!save) {\n        _onChange(_extends({}, changeEvent, {\n          target: changeEvent.target ? _extends({}, changeEvent.target, {\n            value: previousValue\n          }) : {\n            value: previousValue\n          }\n        }));\n      }\n\n      setEditMode(false);\n      onBlur();\n    }\n  };\n\n  var handleKeydown = function handleKeydown(e) {\n    if (e.keyCode === 27 || e.charCode === 27) {\n      handleBlur(false);\n    }\n  };\n\n  var renderDisplayMode = function renderDisplayMode() {\n    var _classnames;\n\n    var textLines = splitLines(formatDisplayText(savedText));\n    return /*#__PURE__*/jsx(\"div\", {\n      id: id,\n      className: classnames(styles.shared, styles.textareaView, (_classnames = {}, _classnames[styles.placeholder] = placeholder && !savedText, _classnames[styles.readonly] = readonly, _classnames), className),\n      onClick: handleClick,\n      style: _extends({}, style, {\n        height: rows * 24 + 16 + \"px\"\n      }),\n      \"aria-label\": \"display component\",\n      children: textLines.length > 0 ? textLines.map(function (text, index) {\n        return /*#__PURE__*/jsxs(React.Fragment, {\n          children: [/*#__PURE__*/jsx(\"span\", {\n            children: text\n          }), /*#__PURE__*/jsx(\"br\", {})]\n        }, index);\n      }) : /*#__PURE__*/jsx(\"span\", {\n        children: placeholder\n      })\n    });\n  };\n\n  var renderEditMode = function renderEditMode(controlled) {\n    var _sharedProps;\n\n    var sharedProps = (_sharedProps = {\n      inputRef: inputRef,\n      handleBlur: handleBlur,\n      handleKeydown: handleKeydown,\n      props: {\n        id: id,\n        rows: rows,\n        style: style,\n        name: name\n      }\n    }, _sharedProps['aria-label'] = 'textarea component', _sharedProps);\n    return controlled ? /*#__PURE__*/jsx(Textarea, _extends({}, sharedProps, {\n      value: value,\n      onChange: function onChange(e) {\n        setChangeEvent(e);\n\n        _onChange(e);\n      },\n      inputClassName: inputClassName\n    })) : /*#__PURE__*/jsx(Textarea, _extends({}, sharedProps, {\n      defaultValue: savedText,\n      inputClassName: inputClassName\n    }));\n  };\n\n  return !readonly && editMode ? renderEditMode(value !== undefined && _onChange !== undefined) : renderDisplayMode();\n}\n\nEditTextarea.defaultProps = EditTextareaDefaultProps;\nEditTextarea.propTypes = EditTextareaPropTypes;\nexport { EditText, EditTextarea };","map":{"version":3,"mappings":"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","names":["Input","_ref","props","id","inline","style","type","name","inputRef","handleBlur","handleKeydown","handleFocus","inputClassName","rest","className","classnames","styles","shared","_classnames","ref","onBlur","onKeyDown","autoFocus","onFocus","EditIcon","xmlns","viewBox","children","d","sharedDefaultProps","undefined","value","formatDisplayText","x","defaultValue","placeholder","onSave","onChange","onEditMode","readonly","sharedPropTypes","PropTypes","string","func","oneOfType","object","array","bool","EditTextPropTypes","showEditButton","editButtonContent","any","editButtonProps","EditTextDefaultProps","_jsx","EditTextareaPropTypes","rows","number","EditTextareaDefaultProps","EditText","React","useRef","useState","changeEvent","setChangeEvent","previousValue","setPreviousValue","savedText","setSavedText","editMode","setEditMode","useEffect","handleClickDisplay","handleClickEditButton","save","current","inputName","inputValue","target","e","keyCode","charCode","currentTarget","setSelectionRange","length","renderDisplayMode","displayContainer","label","_classnames2","onClick","editButton","renderEditMode","controlled","sharedProps","_sharedProps","_extends","defaultProps","propTypes","Textarea","splitLines","val","split","EditTextarea","handleClick","textLines","textareaView","height","map","text","index","Fragment"],"sources":["/goinfre/acamaras/apache2/htdocs/matcha/front/node_modules/react-edit-text/src/components/Input.js","/goinfre/acamaras/apache2/htdocs/matcha/front/node_modules/react-edit-text/src/components/EditIcon.js","/goinfre/acamaras/apache2/htdocs/matcha/front/node_modules/react-edit-text/src/propTypes.js","/goinfre/acamaras/apache2/htdocs/matcha/front/node_modules/react-edit-text/src/EditText.js","/goinfre/acamaras/apache2/htdocs/matcha/front/node_modules/react-edit-text/src/components/Textarea.js","/goinfre/acamaras/apache2/htdocs/matcha/front/node_modules/react-edit-text/src/EditTextarea.js"],"sourcesContent":["import classnames from 'classnames';\nimport React from 'react';\nimport styles from '../styles.module.css';\n\nconst Input = ({\n  props: { id, inline, style, type, name },\n  inputRef,\n  handleBlur,\n  handleKeydown,\n  handleFocus,\n  inputClassName,\n  ...rest\n}) => {\n  return (\n    <input\n      id={id}\n      className={classnames(styles.shared, inputClassName, {\n        [styles.inline]: inline\n      })}\n      style={style}\n      ref={inputRef}\n      type={type}\n      name={name}\n      onBlur={handleBlur}\n      onKeyDown={handleKeydown}\n      autoFocus\n      onFocus={handleFocus}\n      {...rest}\n    />\n  );\n};\n\nexport default Input;\n","import React from 'react';\n\nconst EditIcon = () => {\n  return (\n    <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'>\n      <path d='M421.7 220.3L188.5 453.4L154.6 419.5L158.1 416H112C103.2 416 96 408.8 96 400V353.9L92.51 357.4C87.78 362.2 84.31 368 82.42 374.4L59.44 452.6L137.6 429.6C143.1 427.7 149.8 424.2 154.6 419.5L188.5 453.4C178.1 463.8 165.2 471.5 151.1 475.6L30.77 511C22.35 513.5 13.24 511.2 7.03 504.1C.8198 498.8-1.502 489.7 .976 481.2L36.37 360.9C40.53 346.8 48.16 333.9 58.57 323.5L291.7 90.34L421.7 220.3zM492.7 58.75C517.7 83.74 517.7 124.3 492.7 149.3L444.3 197.7L314.3 67.72L362.7 19.32C387.7-5.678 428.3-5.678 453.3 19.32L492.7 58.75z' />\n    </svg>\n  );\n};\n\nexport default EditIcon;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport EditIcon from './components/EditIcon';\n\nconst sharedDefaultProps = {\n  id: undefined,\n  name: undefined,\n  className: undefined,\n  value: undefined,\n  formatDisplayText: (x) => x,\n  defaultValue: undefined,\n  placeholder: '',\n  onSave: () => {},\n  onChange: () => {},\n  onEditMode: () => {},\n  onBlur: () => {},\n  style: {},\n  readonly: false,\n  inputClassName: undefined\n};\n\nconst sharedPropTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  className: PropTypes.string,\n  value: PropTypes.string,\n  formatDisplayText: PropTypes.func,\n  defaultValue: PropTypes.string,\n  placeholder: PropTypes.string,\n  onSave: PropTypes.func,\n  onChange: PropTypes.func,\n  onEditMode: PropTypes.func,\n  onBlur: PropTypes.func,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  readonly: PropTypes.bool,\n  inputClassName: PropTypes.string\n};\n\nexport const EditTextPropTypes = {\n  ...sharedPropTypes,\n  type: PropTypes.string,\n  inline: PropTypes.bool,\n  showEditButton: PropTypes.bool,\n  editButtonContent: PropTypes.any,\n  editButtonProps: PropTypes.object\n};\n\nexport const EditTextDefaultProps = {\n  ...sharedDefaultProps,\n  type: 'text',\n  inline: false,\n  showEditButton: false,\n  editButtonContent: <EditIcon />,\n  editButtonProps: {}\n};\n\nexport const EditTextareaPropTypes = {\n  ...sharedPropTypes,\n  rows: PropTypes.number\n};\n\nexport const EditTextareaDefaultProps = {\n  ...sharedDefaultProps,\n  rows: 3\n};\n","import classnames from 'classnames';\nimport React from 'react';\nimport Input from './components/Input';\nimport { EditTextDefaultProps, EditTextPropTypes } from './propTypes';\nimport styles from './styles.module.css';\n\nexport default function EditText({\n  id,\n  name,\n  className,\n  placeholder,\n  inline,\n  style,\n  readonly,\n  type,\n  value,\n  defaultValue,\n  formatDisplayText,\n  onEditMode,\n  onChange,\n  onSave,\n  onBlur,\n  showEditButton,\n  editButtonContent,\n  editButtonProps,\n  inputClassName\n}) {\n  const inputRef = React.useRef(null);\n  const [changeEvent, setChangeEvent] = React.useState({});\n  const [previousValue, setPreviousValue] = React.useState('');\n  const [savedText, setSavedText] = React.useState('');\n  const [editMode, setEditMode] = React.useState(false);\n\n  React.useEffect(() => {\n    if (defaultValue !== undefined) {\n      setPreviousValue(defaultValue);\n      setSavedText(defaultValue);\n    }\n  }, [defaultValue]);\n\n  React.useEffect(() => {\n    if (value !== undefined) {\n      setSavedText(value);\n      if (!editMode) {\n        setPreviousValue(value);\n      }\n    }\n  }, [value, editMode]);\n\n  const handleClickDisplay = () => {\n    if (readonly || showEditButton) return;\n    setEditMode(true);\n    onEditMode();\n  };\n\n  const handleClickEditButton = () => {\n    setEditMode(true);\n    onEditMode();\n  };\n\n  const handleBlur = (save = true) => {\n    if (inputRef.current) {\n      const { name: inputName, value: inputValue } = inputRef.current;\n      if (save && previousValue !== inputValue) {\n        onSave({\n          name: inputName,\n          value: inputValue,\n          previousValue: previousValue\n        });\n        setSavedText(inputValue);\n        setPreviousValue(inputValue);\n      } else if (!save) {\n        onChange({\n          ...changeEvent,\n          target: changeEvent.target\n            ? { ...changeEvent.target, value: previousValue }\n            : { value: previousValue }\n        });\n      }\n      setEditMode(false);\n      onBlur();\n    }\n  };\n\n  const handleKeydown = (e) => {\n    if (e.keyCode === 13 || e.charCode === 13) {\n      handleBlur();\n    } else if (e.keyCode === 27 || e.charCode === 27) {\n      handleBlur(false);\n    }\n  };\n\n  const handleFocus = (e) => {\n    if (type === 'text') {\n      e.currentTarget.setSelectionRange(\n        e.currentTarget.value.length,\n        e.currentTarget.value.length\n      );\n    }\n  };\n\n  const renderDisplayMode = () => {\n    return (\n      <div\n        className={classnames(styles.displayContainer, {\n          [styles.inline]: inline\n        })}\n      >\n        <div\n          id={id}\n          className={classnames(\n            styles.label,\n            styles.shared,\n            {\n              [styles.placeholder]: placeholder && !savedText,\n              [styles.inline]: inline,\n              [styles.readonly]: readonly || showEditButton\n            },\n            className\n          )}\n          onClick={handleClickDisplay}\n          style={style}\n          aria-label='display component'\n        >\n          {formatDisplayText(savedText) || placeholder}\n        </div>\n        {showEditButton && !readonly && (\n          <button\n            type='button'\n            className={styles.editButton}\n            {...editButtonProps}\n            onClick={handleClickEditButton}\n          >\n            {editButtonContent}\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  const renderEditMode = (controlled) => {\n    const sharedProps = {\n      inputRef: inputRef,\n      handleBlur: handleBlur,\n      handleKeydown: handleKeydown,\n      handleFocus: handleFocus,\n      props: { id, inline, style, type, name },\n      ['aria-label']: 'input component'\n    };\n    return controlled ? (\n      <Input\n        {...sharedProps}\n        value={value}\n        onChange={(e) => {\n          setChangeEvent(e);\n          onChange(e);\n        }}\n        inputClassName={inputClassName}\n      />\n    ) : (\n      <Input\n        {...sharedProps}\n        defaultValue={savedText}\n        inputClassName={inputClassName}\n      />\n    );\n  };\n\n  return !readonly && editMode\n    ? renderEditMode(value !== undefined && onChange !== undefined)\n    : renderDisplayMode();\n}\n\nEditText.defaultProps = EditTextDefaultProps;\nEditText.propTypes = EditTextPropTypes;\n","import classnames from 'classnames';\nimport React from 'react';\nimport styles from '../styles.module.css';\n\nconst Textarea = ({\n  props: { id, rows, style, name },\n  inputRef,\n  handleBlur,\n  handleKeydown,\n  inputClassName,\n  ...rest\n}) => {\n  return (\n    <textarea\n      id={id}\n      className={classnames(styles.shared, inputClassName)}\n      style={style}\n      ref={inputRef}\n      rows={rows}\n      name={name}\n      onBlur={handleBlur}\n      onKeyDown={handleKeydown}\n      autoFocus\n      onFocus={(e) =>\n        e.currentTarget.setSelectionRange(\n          e.currentTarget.value.length,\n          e.currentTarget.value.length\n        )\n      }\n      {...rest}\n    />\n  );\n};\n\nexport default Textarea;\n","import classnames from 'classnames';\nimport React from 'react';\nimport Textarea from './components/Textarea';\nimport { EditTextareaDefaultProps, EditTextareaPropTypes } from './propTypes';\nimport styles from './styles.module.css';\n\nconst splitLines = (val) => (val ? val.split(/\\r?\\n/) : []);\n\nexport default function EditTextarea({\n  id,\n  rows,\n  name,\n  className,\n  placeholder,\n  style,\n  readonly,\n  value,\n  defaultValue,\n  formatDisplayText,\n  onEditMode,\n  onChange,\n  onSave,\n  onBlur,\n  inputClassName\n}) {\n  const inputRef = React.useRef(null);\n  const [changeEvent, setChangeEvent] = React.useState({});\n  const [previousValue, setPreviousValue] = React.useState('');\n  const [savedText, setSavedText] = React.useState('');\n  const [editMode, setEditMode] = React.useState(false);\n\n  React.useEffect(() => {\n    if (defaultValue !== undefined) {\n      setPreviousValue(defaultValue);\n      setSavedText(defaultValue);\n    }\n  }, [defaultValue]);\n\n  React.useEffect(() => {\n    if (value !== undefined) {\n      setSavedText(value);\n      if (!editMode) {\n        setPreviousValue(value);\n      }\n    }\n  }, [value, editMode]);\n\n  const handleClick = () => {\n    if (readonly) return;\n    setEditMode(true);\n    onEditMode();\n  };\n\n  const handleBlur = (save = true) => {\n    if (inputRef.current) {\n      const { name: inputName, value: inputValue } = inputRef.current;\n      if (save && previousValue !== inputValue) {\n        onSave({\n          name: inputName,\n          value: inputValue,\n          previousValue: previousValue\n        });\n        setSavedText(inputValue);\n        setPreviousValue(inputValue);\n      } else if (!save) {\n        onChange({\n          ...changeEvent,\n          target: changeEvent.target\n            ? { ...changeEvent.target, value: previousValue }\n            : { value: previousValue }\n        });\n      }\n      setEditMode(false);\n      onBlur();\n    }\n  };\n\n  const handleKeydown = (e) => {\n    if (e.keyCode === 27 || e.charCode === 27) {\n      handleBlur(false);\n    }\n  };\n\n  const renderDisplayMode = () => {\n    const textLines = splitLines(formatDisplayText(savedText));\n    return (\n      <div\n        id={id}\n        className={classnames(\n          styles.shared,\n          styles.textareaView,\n          {\n            [styles.placeholder]: placeholder && !savedText,\n            [styles.readonly]: readonly\n          },\n          className\n        )}\n        onClick={handleClick}\n        style={{\n          ...style,\n          height: `${rows * 24 + 16}px`\n        }}\n        aria-label='display component'\n      >\n        {textLines.length > 0 ? (\n          textLines.map((text, index) => (\n            <React.Fragment key={index}>\n              <span>{text}</span>\n              <br />\n            </React.Fragment>\n          ))\n        ) : (\n          <span>{placeholder}</span>\n        )}\n      </div>\n    );\n  };\n\n  const renderEditMode = (controlled) => {\n    const sharedProps = {\n      inputRef: inputRef,\n      handleBlur: handleBlur,\n      handleKeydown: handleKeydown,\n      props: { id, rows, style, name },\n      ['aria-label']: 'textarea component'\n    };\n    return controlled ? (\n      <Textarea\n        {...sharedProps}\n        value={value}\n        onChange={(e) => {\n          setChangeEvent(e);\n          onChange(e);\n        }}\n        inputClassName={inputClassName}\n      />\n    ) : (\n      <Textarea\n        {...sharedProps}\n        defaultValue={savedText}\n        inputClassName={inputClassName}\n      />\n    );\n  };\n\n  return !readonly && editMode\n    ? renderEditMode(value !== undefined && onChange !== undefined)\n    : renderDisplayMode();\n}\n\nEditTextarea.defaultProps = EditTextareaDefaultProps;\nEditTextarea.propTypes = EditTextareaPropTypes;\n"]},"metadata":{},"sourceType":"module"}