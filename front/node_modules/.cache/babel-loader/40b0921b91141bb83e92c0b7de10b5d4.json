{"ast":null,"code":"var _jsxFileName = \"/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/front/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport Dashboard from \"./components/Dashboard\";\nimport Login from \"./components/Login\";\nimport Navbar from \"./components/Navbar\";\nimport Register from \"./components/Register\";\nimport ProfileForm from \"./components/ProfileForm\";\nimport ForgotPasswords from \"./components/ForgotPassword\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [expire, setExpire] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    refreshToken();\n    getUsers();\n  }, []);\n\n  const refreshToken = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setName(decoded.name);\n      setExpire(decoded.exp);\n    } catch (error) {\n      if (error.response) {\n        history.push(\"/\");\n      } else {\n        history.push(\"/dashboard\");\n      }\n    }\n  };\n\n  const axiosJWT = axios.create();\n  axiosJWT.interceptors.request.use(async config => {\n    const currentDate = new Date();\n\n    if (expire * 1000 < currentDate.getTime()) {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n      setToken(response.data.accessToken); //console.log(\"token \",response.data.accessToken);\n\n      const decoded = jwt_decode(response.data.accessToken);\n      setName(decoded.name);\n      setExpire(decoded.exp);\n    }\n\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n\n  const getUsers = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/users\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setUsers(response.data);\n  };\n\n  console.log('this is users birthdate ', users);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/forgotpassword\",\n        children: /*#__PURE__*/_jsxDEV(ForgotPasswords, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/completeprofile\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ProfileForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), users.birthdate === 0 ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/completeprofile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1dC8ypTn6RgRF7V/i55PgCc3V6w=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/front/src/App.js"],"names":["BrowserRouter","Route","Switch","Redirect","useState","useEffect","useHistory","axios","jwt_decode","Dashboard","Login","Navbar","Register","ProfileForm","ForgotPasswords","App","name","setName","token","setToken","expire","setExpire","users","setUsers","history","refreshToken","getUsers","response","get","data","accessToken","decoded","exp","error","push","axiosJWT","create","interceptors","request","use","config","currentDate","Date","getTime","headers","Authorization","Promise","reject","console","log","birthdate"],"mappings":"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","sourcesContent":["import { BrowserRouter, Route, Switch, Redirect} from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport Dashboard from \"./components/Dashboard\";\nimport Login from \"./components/Login\";\nimport Navbar from \"./components/Navbar\";\nimport Register from \"./components/Register\";\nimport ProfileForm from \"./components/ProfileForm\";\nimport ForgotPasswords from \"./components/ForgotPassword\";\n\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [expire, setExpire] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    refreshToken();\n    getUsers();\n\n  }, []);\n\n  const refreshToken = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setName(decoded.name);\n      setExpire(decoded.exp);\n    } catch (error) {\n      if (error.response) {\n        history.push(\"/\");\n      }\n      else {\n        history.push(\"/dashboard\")\n      }\n    }\n  };\n\n  const axiosJWT = axios.create();\n\n  axiosJWT.interceptors.request.use(\n    async (config) => {\n      const currentDate = new Date();\n      if (expire * 1000 < currentDate.getTime()) {\n        const response = await axios.get(\"http://localhost:5000/token\");\n        config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n        setToken(response.data.accessToken);\n        //console.log(\"token \",response.data.accessToken);\n        const decoded = jwt_decode(response.data.accessToken);\n        setName(decoded.name);\n        setExpire(decoded.exp);\n      }\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  const getUsers = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/users\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    setUsers(response.data);\n  };\n  console.log('this is users birthdate ',users)\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <Login />\n        </Route>\n        <Route path=\"/forgotpassword\">\n          <ForgotPasswords />\n        </Route>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n          <Route path=\"/completeprofile\">\n            <Navbar />\n            <ProfileForm />\n          </Route>\n        <Route path=\"/dashboard\">\n          <Navbar />\n          <Dashboard />\n        </Route>\n        {users.birthdate === 0 ?\n        <Redirect to= \"/completeprofile\"/>:<Redirect to= \"/dashboard\"/> }\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}