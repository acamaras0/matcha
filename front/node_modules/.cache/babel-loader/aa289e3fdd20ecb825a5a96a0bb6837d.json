{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getDistance } from \"geolib\";\nimport { useCookies } from \"react-cookie\";\nimport axios from \"axios\";\nimport useGeoLocation from \"./useGeoLocation\";\n\nconst useGetDistance = () => {\n  _s();\n\n  const location = useGeoLocation();\n  const [matchLocation, setMatchLocation] = useState([]);\n  useEffect(() => {\n    getCoordinates();\n  }, []);\n\n  const getCoordinates = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/users/info/${cookie.refreshToken}`);\n      setMatchLocation(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  for (let i = 0; i < matchLocation.length; i++) {\n    const distance = getDistance({\n      latitude: location.coordinates.lat,\n      longitude: location.coordinates.lng\n    }, {\n      latitude: matchLocation[i].geo_lat,\n      longitude: matchLocation[i].geo_long\n    });\n    matchLocation[i].distance = distance;\n  }\n\n  return matchLocation;\n};\n\n_s(useGetDistance, \"8XLl9KGKvfVzKTKQccklORz1dJs=\", false, function () {\n  return [useGeoLocation];\n});\n\nexport default useGetDistance;","map":{"version":3,"sources":["/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/front/src/utils/useGetDistance.js"],"names":["useEffect","useState","getDistance","useCookies","axios","useGeoLocation","useGetDistance","location","matchLocation","setMatchLocation","getCoordinates","response","get","cookie","refreshToken","data","error","console","log","i","length","distance","latitude","coordinates","lat","longitude","lng","geo_lat","geo_long"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAMC,QAAQ,GAAGF,cAAc,EAA/B;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,cAAc,GAAG,YAAY;AACjC,QAAG;AACD,YAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAY,oCAAmCC,MAAM,CAACC,YAAa,EAAnE,CAAvB;AACAL,MAAAA,gBAAgB,CAACE,QAAQ,CAACI,IAAV,CAAhB;AACD,KAHD,CAIA,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GARD;;AAUA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,aAAa,CAACY,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,UAAME,QAAQ,GAAGnB,WAAW,CAC1B;AACEoB,MAAAA,QAAQ,EAAEf,QAAQ,CAACgB,WAAT,CAAqBC,GADjC;AAEEC,MAAAA,SAAS,EAAElB,QAAQ,CAACgB,WAAT,CAAqBG;AAFlC,KAD0B,EAK1B;AACEJ,MAAAA,QAAQ,EAAEd,aAAa,CAACW,CAAD,CAAb,CAAiBQ,OAD7B;AAEEF,MAAAA,SAAS,EAAEjB,aAAa,CAACW,CAAD,CAAb,CAAiBS;AAF9B,KAL0B,CAA5B;AAUApB,IAAAA,aAAa,CAACW,CAAD,CAAb,CAAiBE,QAAjB,GAA4BA,QAA5B;AACD;;AACD,SAAOb,aAAP;AACD,CAhCD;;GAAMF,c;UACaD,c;;;AAiCnB,eAAeC,cAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getDistance } from \"geolib\";\nimport { useCookies } from \"react-cookie\";\n\nimport axios from \"axios\";\nimport useGeoLocation from \"./useGeoLocation\";\n\nconst useGetDistance = () => {\n  const location = useGeoLocation();\n  const [matchLocation, setMatchLocation] = useState([]);\n\n  useEffect(() => {\n    getCoordinates();\n  }, []);\n\n  const getCoordinates = async () => {\n    try{\n      const response = await axios.get( `http://localhost:5000/users/info/${cookie.refreshToken}`);\n      setMatchLocation(response.data);\n    }\n    catch (error) {\n      console.log(error);\n    }\n  };\n\n  for (let i = 0; i < matchLocation.length; i++) {\n    const distance = getDistance(\n      {\n        latitude: location.coordinates.lat,\n        longitude: location.coordinates.lng,\n      },\n      {\n        latitude: matchLocation[i].geo_lat,\n        longitude: matchLocation[i].geo_long,\n      }\n    );\n    matchLocation[i].distance = distance;\n  }\n  return matchLocation;\n};\n\nexport default useGetDistance;\n"]},"metadata":{},"sourceType":"module"}