{"ast":null,"code":"var _jsxFileName = \"/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/front/src/components/Profile.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\nimport img from \"./file1660896899801.jpeg\";\nimport StarRating from \"../models/StarRating\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const [loggedIn, setLoggedin] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [expire, setExpire] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [pics, setPics] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    refreshToken();\n    getLoggedIn();\n    getPicsById();\n  }, []);\n\n  const refreshToken = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setName(decoded.name);\n      setExpire(decoded.exp);\n    } catch (error) {\n      if (error.response) {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  const axiosJWT = axios.create();\n  axiosJWT.interceptors.request.use(async config => {\n    const currentDate = new Date();\n\n    if (expire * 1000 < currentDate.getTime()) {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n      setToken(response.data.accessToken); //console.log(\"token \",response.data.accessToken);\n\n      const decoded = jwt_decode(response.data.accessToken);\n      setName(decoded.name);\n      setExpire(decoded.exp);\n    }\n\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n\n  const getLoggedIn = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/users\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setLoggedin(response.data);\n  };\n\n  const getPicsById = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/user/pictures\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setPics(response.data);\n  }; //   console.log(\"here\",pics[0].pic_path);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: [loggedIn.firstname, \" \", loggedIn.lastname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n      rating: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card-img-top\",\n        src: img,\n        alt: \"Card image cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: loggedIn.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          classname: \"card-text\",\n          children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: loggedIn.bio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: loggedIn.gender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"k7uaCEiSwsvU8V67k/DjbZcdVHI=\", false, function () {\n  return [useHistory];\n});\n\n_c = Profile;\nexport default Profile;\n{\n  /* {pics.map((pic, index) => (\n            <tr key={index}>\n              <td>\n                <img src={pic.pic_path} alt=\"pic\" width=\"100\" height=\"100\" />\n             \n              </td>\n              </tr>\n          ))} */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/front/src/components/Profile.js"],"names":["React","useState","useEffect","axios","jwt_decode","useHistory","img","StarRating","Profile","loggedIn","setLoggedin","name","setName","token","setToken","expire","setExpire","users","setUsers","pics","setPics","history","refreshToken","getLoggedIn","getPicsById","response","get","data","accessToken","decoded","exp","error","push","axiosJWT","create","interceptors","request","use","config","currentDate","Date","getTime","headers","Authorization","Promise","reject","firstname","lastname","username","bio","gender"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMoB,OAAO,GAAGhB,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,YAAY;AACZC,IAAAA,WAAW;AACXC,IAAAA,WAAW;AACZ,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMF,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAMG,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAU,6BAAV,CAAvB;AACAZ,MAAAA,QAAQ,CAACW,QAAQ,CAACE,IAAT,CAAcC,WAAf,CAAR;AACA,YAAMC,OAAO,GAAGzB,UAAU,CAACqB,QAAQ,CAACE,IAAT,CAAcC,WAAf,CAA1B;AACAhB,MAAAA,OAAO,CAACiB,OAAO,CAAClB,IAAT,CAAP;AACAK,MAAAA,SAAS,CAACa,OAAO,CAACC,GAAT,CAAT;AACD,KAND,CAME,OAAOC,KAAP,EAAc;AACd,UAAIA,KAAK,CAACN,QAAV,EAAoB;AAClBJ,QAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AACD;AACF;AACF,GAZD;;AAcA,QAAMC,QAAQ,GAAG9B,KAAK,CAAC+B,MAAN,EAAjB;AAEAD,EAAAA,QAAQ,CAACE,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACE,MAAOC,MAAP,IAAkB;AAChB,UAAMC,WAAW,GAAG,IAAIC,IAAJ,EAApB;;AACA,QAAIzB,MAAM,GAAG,IAAT,GAAgBwB,WAAW,CAACE,OAAZ,EAApB,EAA2C;AACzC,YAAMhB,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAU,6BAAV,CAAvB;AACAY,MAAAA,MAAM,CAACI,OAAP,CAAeC,aAAf,GAAgC,UAASlB,QAAQ,CAACE,IAAT,CAAcC,WAAY,EAAnE;AACAd,MAAAA,QAAQ,CAACW,QAAQ,CAACE,IAAT,CAAcC,WAAf,CAAR,CAHyC,CAIzC;;AACA,YAAMC,OAAO,GAAGzB,UAAU,CAACqB,QAAQ,CAACE,IAAT,CAAcC,WAAf,CAA1B;AACAhB,MAAAA,OAAO,CAACiB,OAAO,CAAClB,IAAT,CAAP;AACAK,MAAAA,SAAS,CAACa,OAAO,CAACC,GAAT,CAAT;AACD;;AACD,WAAOQ,MAAP;AACD,GAbH,EAcGP,KAAD,IAAW;AACT,WAAOa,OAAO,CAACC,MAAR,CAAed,KAAf,CAAP;AACD,GAhBH;;AAmBA,QAAMR,WAAW,GAAG,YAAY;AAC9B,UAAME,QAAQ,GAAG,MAAMQ,QAAQ,CAACP,GAAT,CAAa,6BAAb,EAA4C;AACjEgB,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAAS9B,KAAM;AADxB;AADwD,KAA5C,CAAvB;AAKAH,IAAAA,WAAW,CAACe,QAAQ,CAACE,IAAV,CAAX;AACD,GAPD;;AASA,QAAMH,WAAW,GAAG,YAAY;AAC9B,UAAMC,QAAQ,GAAG,MAAMQ,QAAQ,CAACP,GAAT,CAAa,qCAAb,EAAoD;AACzEgB,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAAS9B,KAAM;AADxB;AADgE,KAApD,CAAvB;AAKAO,IAAAA,OAAO,CAACK,QAAQ,CAACE,IAAV,CAAP;AACD,GAPD,CA3DoB,CAoEpB;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,iBACGlB,QAAQ,CAACqC,SADZ,OACwBrC,QAAQ,CAACsC,QADjC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,UAAD;AAAY,MAAA,MAAM,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,GAAG,EAAEzC,GAFP;AAGE,QAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BG,QAAQ,CAACuC;AAArC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAuBE;AAAA,gBAAIvC,QAAQ,CAACwC;AAAb;AAAA;AAAA;AAAA;AAAA,YAvBF,eAwBE;AAAA,gBAAIxC,QAAQ,CAACyC;AAAb;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAjGD;;GAAM1C,O;UAOYH,U;;;KAPZG,O;AAmGN,eAAeA,OAAf;AAEA;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACC","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\nimport img from \"./file1660896899801.jpeg\";\nimport StarRating from \"../models/StarRating\";\n\nconst Profile = () => {\n  const [loggedIn, setLoggedin] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [expire, setExpire] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [pics, setPics] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    refreshToken();\n    getLoggedIn();\n    getPicsById();\n  }, []);\n\n  const refreshToken = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setName(decoded.name);\n      setExpire(decoded.exp);\n    } catch (error) {\n      if (error.response) {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  const axiosJWT = axios.create();\n\n  axiosJWT.interceptors.request.use(\n    async (config) => {\n      const currentDate = new Date();\n      if (expire * 1000 < currentDate.getTime()) {\n        const response = await axios.get(\"http://localhost:5000/token\");\n        config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n        setToken(response.data.accessToken);\n        //console.log(\"token \",response.data.accessToken);\n        const decoded = jwt_decode(response.data.accessToken);\n        setName(decoded.name);\n        setExpire(decoded.exp);\n      }\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  const getLoggedIn = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/users\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    setLoggedin(response.data);\n  };\n\n  const getPicsById = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/user/pictures\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    setPics(response.data);\n  };\n\n  //   console.log(\"here\",pics[0].pic_path);\n  return (\n    <div className=\"text-center\">\n      <h1 className=\"text-center\">\n        {loggedIn.firstname} {loggedIn.lastname}\n      </h1>\n      <StarRating rating={3} />\n      <div className=\"card\">\n        <img\n          className=\"card-img-top\"\n          src={img}\n          alt=\"Card image cap\"\n        />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{loggedIn.username}</h5>\n          <p classname=\"card-text\">\n            Some quick example text to build on the card title and make up the\n            bulk of the card's content.\n          </p>\n          \n        </div>\n      </div>\n      {/* <div classname=\"border border-warning\">\n        <img src={img} alt=\"pic\" width=\"380\" height=\"270\" />\n      </div> */}\n      <p>{loggedIn.bio}</p>\n      <p>{loggedIn.gender}</p>\n    </div>\n  );\n};\n\nexport default Profile;\n\n{\n  /* {pics.map((pic, index) => (\n            <tr key={index}>\n              <td>\n                <img src={pic.pic_path} alt=\"pic\" width=\"100\" height=\"100\" />\n             \n              </td>\n              </tr>\n          ))} */\n}\n"]},"metadata":{},"sourceType":"module"}