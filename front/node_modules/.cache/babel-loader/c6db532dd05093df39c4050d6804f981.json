{"ast":null,"code":"var _jsxFileName = \"/opt/lampstack-8.1.7-0/apache2/htdocs/xxxxxxxxxxxxxxx/front/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [expire, setExpire] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [info, setInfo] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    refreshToken();\n    getUsers();\n    getInfo();\n  }, []);\n\n  const refreshToken = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setName(decoded.name);\n      setExpire(decoded.exp);\n    } catch (error) {\n      if (error.response) {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  const axiosJWT = axios.create();\n  axiosJWT.interceptors.request.use(async config => {\n    const currentDate = new Date();\n\n    if (expire * 1000 < currentDate.getTime()) {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setName(decoded.name);\n      setExpire(decoded.exp);\n    }\n\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n\n  const getUsers = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/users\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setUsers(response.data);\n  };\n\n  const getInfo = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/fill\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setInfo(response.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"DB users: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table is-striped is-fullwidth\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [users.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)), info.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.birthdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.gender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"320GSIk5IwDRoeFOeWG6KF6y45Q=\", false, function () {\n  return [useHistory];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/opt/lampstack-8.1.7-0/apache2/htdocs/xxxxxxxxxxxxxxx/front/src/components/Dashboard.js"],"names":["React","useState","useEffect","axios","jwt_decode","useHistory","Dashboard","name","setName","token","setToken","expire","setExpire","users","setUsers","info","setInfo","history","refreshToken","getUsers","getInfo","response","get","data","accessToken","decoded","exp","error","push","axiosJWT","create","interceptors","request","use","config","currentDate","Date","getTime","headers","Authorization","Promise","reject","map","user","index","id","username","email","birthdate","gender"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Dashboard = () => {\n  const [name, setName] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [expire, setExpire] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [info, setInfo] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    refreshToken();\n    getUsers();\n    getInfo();\n  }, []);\n\n  const refreshToken = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setName(decoded.name);\n      setExpire(decoded.exp);\n    } catch (error) {\n      if (error.response) {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  const axiosJWT = axios.create();\n\n  axiosJWT.interceptors.request.use(\n    async (config) => {\n      const currentDate = new Date();\n      if (expire * 1000 < currentDate.getTime()) {\n        const response = await axios.get(\"http://localhost:5000/token\");\n        config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n        setToken(response.data.accessToken);\n        const decoded = jwt_decode(response.data.accessToken);\n        setName(decoded.name);\n        setExpire(decoded.exp);\n      }\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  const getUsers = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/users\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    setUsers(response.data);\n  };\n  const getInfo = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/fill\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    setInfo(response.data);\n  };\n  return (\n    <div className=\"container mt-5\">\n      <h1>DB users: {name}</h1>\n      <table className=\"table is-striped is-fullwidth\">\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Name</th>\n            <th>Email</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map((user, index) => (\n            <tr>\n              <td>{user.id}</td>\n              <td>{user.username}</td>\n              <td>{user.email}</td>\n            </tr>\n          ))}\n          {info.map((user) => (\n            <tr>\n              <td>{user.birthdate}</td>\n              <td>{user.gender}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}