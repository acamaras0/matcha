{"ast":null,"code":"var _jsxFileName = \"/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/front/src/components/Profile.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\nimport img from \"./file1660896899801.jpeg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const [loggedIn, setLoggedin] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [expire, setExpire] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [pics, setPics] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    refreshToken();\n    getLoggedIn();\n    getPicsById();\n  }, []);\n\n  const refreshToken = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setName(decoded.name);\n      setExpire(decoded.exp);\n    } catch (error) {\n      if (error.response) {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  const axiosJWT = axios.create();\n  axiosJWT.interceptors.request.use(async config => {\n    const currentDate = new Date();\n\n    if (expire * 1000 < currentDate.getTime()) {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n      setToken(response.data.accessToken); //console.log(\"token \",response.data.accessToken);\n\n      const decoded = jwt_decode(response.data.accessToken);\n      setName(decoded.name);\n      setExpire(decoded.exp);\n    }\n\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n\n  const getLoggedIn = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/users\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setLoggedin(response.data);\n  };\n\n  const getPicsById = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/user/pictures\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setPics(response.data);\n  }; //   console.log(\"here\",pics[0].pic_path);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: [loggedIn.firstname, \" \", loggedIn.lastname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: img,\n      alt: \"pic\",\n      width: \"300\",\n      height: \"300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"k7uaCEiSwsvU8V67k/DjbZcdVHI=\", false, function () {\n  return [useHistory];\n});\n\n_c = Profile;\nexport default Profile;\n{\n  /* {pics.map((pic, index) => (\n   <tr key={index}>\n     <td>\n       <img src={pic.pic_path} alt=\"pic\" width=\"100\" height=\"100\" />\n    \n     </td>\n     </tr>\n  ))} */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/front/src/components/Profile.js"],"names":["React","useState","useEffect","axios","jwt_decode","useHistory","img","Profile","loggedIn","setLoggedin","name","setName","token","setToken","expire","setExpire","users","setUsers","pics","setPics","history","refreshToken","getLoggedIn","getPicsById","response","get","data","accessToken","decoded","exp","error","push","axiosJWT","create","interceptors","request","use","config","currentDate","Date","getTime","headers","Authorization","Promise","reject","firstname","lastname"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\nimport img from \"./file1660896899801.jpeg\"; \n\nconst Profile = () => {\n  const [loggedIn, setLoggedin] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [expire, setExpire] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [pics, setPics] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    refreshToken();\n    getLoggedIn();\n    getPicsById();\n  }, []);\n\n  const refreshToken = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setName(decoded.name);\n      setExpire(decoded.exp);\n    } catch (error) {\n      if (error.response) {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  const axiosJWT = axios.create();\n\n  axiosJWT.interceptors.request.use(\n    async (config) => {\n      const currentDate = new Date();\n      if (expire * 1000 < currentDate.getTime()) {\n        const response = await axios.get(\"http://localhost:5000/token\");\n        config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n        setToken(response.data.accessToken);\n        //console.log(\"token \",response.data.accessToken);\n        const decoded = jwt_decode(response.data.accessToken);\n        setName(decoded.name);\n        setExpire(decoded.exp);\n      }\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  const getLoggedIn = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/users\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    setLoggedin(response.data);\n  };\n\n  const getPicsById = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/user/pictures\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    setPics(response.data);\n  };\n\n//   console.log(\"here\",pics[0].pic_path);\n  return (\n    <div className=\"text-center\">\n      <h1 className=\"text-center\">{loggedIn.firstname} {loggedIn.lastname}</h1>\n      <img src={img} alt=\"pic\" width=\"300\" height=\"300\" />\n      \n    </div>\n  );\n};\n\nexport default Profile;\n\n          {/* {pics.map((pic, index) => (\n            <tr key={index}>\n              <td>\n                <img src={pic.pic_path} alt=\"pic\" width=\"100\" height=\"100\" />\n             \n              </td>\n              </tr>\n          ))} */}"]},"metadata":{},"sourceType":"module"}