{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getDistance } from \"geolib\";\nimport axios from \"axios\";\nimport useGeoLocation from \"./useGeoLocation\";\n\nconst useGetDistance = () => {\n  _s();\n\n  const location = useGeoLocation();\n  const [matchLocation, setMatchLocation] = useState([]);\n  useEffect(() => {\n    getCoordinates();\n  }, []);\n\n  const getCoordinates = async () => {\n    const response = await axios.get(\"http://localhost:5000/coordinates\"); //console.log(response.data)\n\n    setMatchLocation(response.data);\n    console.log(\"matchLocation\", matchLocation);\n  };\n\n  const distance = getDistance({\n    latitude: location.coordinates.lat,\n    longitude: location.coordinates.lng\n  }, {\n    latitude: matchLocation.geo_lat,\n    longitude: matchLocation.geo_long\n  });\n  return distance;\n};\n\n_s(useGetDistance, \"8XLl9KGKvfVzKTKQccklORz1dJs=\", false, function () {\n  return [useGeoLocation];\n});\n\nexport default useGetDistance;","map":{"version":3,"sources":["/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/front/src/utils/useGetDistance.js"],"names":["useEffect","useState","getDistance","axios","useGeoLocation","useGetDistance","location","matchLocation","setMatchLocation","getCoordinates","response","get","data","console","log","distance","latitude","coordinates","lat","longitude","lng","geo_lat","geo_long"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAMC,QAAQ,GAAGF,cAAc,EAA/B;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,cAAc,GAAG,YAAY;AACjC,UAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,mCAAV,CAAvB,CADiC,CAEjC;;AACAH,IAAAA,gBAAgB,CAACE,QAAQ,CAACE,IAAV,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BP,aAA7B;AACD,GALD;;AAOA,QAAMQ,QAAQ,GAAGb,WAAW,CAC1B;AACEc,IAAAA,QAAQ,EAAEV,QAAQ,CAACW,WAAT,CAAqBC,GADjC;AAEEC,IAAAA,SAAS,EAAEb,QAAQ,CAACW,WAAT,CAAqBG;AAFlC,GAD0B,EAK1B;AACEJ,IAAAA,QAAQ,EAAET,aAAa,CAACc,OAD1B;AAEEF,IAAAA,SAAS,EAAEZ,aAAa,CAACe;AAF3B,GAL0B,CAA5B;AAWA,SAAOP,QAAP;AACD,CA3BD;;GAAMV,c;UACaD,c;;;AA4BnB,eAAeC,cAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getDistance } from \"geolib\";\nimport axios from \"axios\";\nimport useGeoLocation from \"./useGeoLocation\";\n\nconst useGetDistance = () => {\n  const location = useGeoLocation();\n  const [matchLocation, setMatchLocation] = useState([]);\n\n  useEffect(() => {\n    getCoordinates();\n  }, []);\n\n  const getCoordinates = async () => {\n    const response = await axios.get(\"http://localhost:5000/coordinates\");\n    //console.log(response.data)\n    setMatchLocation(response.data);\n    console.log(\"matchLocation\", matchLocation);\n  };\n\n  const distance = getDistance(\n    {\n      latitude: location.coordinates.lat,\n      longitude: location.coordinates.lng,\n    },\n    {\n      latitude: matchLocation.geo_lat,\n      longitude: matchLocation.geo_long,\n    }\n  );\n\n  return distance;\n};\n\nexport default useGetDistance;\n"]},"metadata":{},"sourceType":"module"}