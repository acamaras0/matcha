[{"/goinfre/acamaras/apache2/htdocs/matcha/front/src/index.js":"1","/goinfre/acamaras/apache2/htdocs/matcha/front/src/App.js":"2","/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/Register.js":"3","/goinfre/acamaras/apache2/htdocs/matcha/front/src/context/UserContext.js":"4","/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/PicturesForm.js":"5","/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/ProfileForm.js":"6","/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/ResetPassword.js":"7","/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/Dashboard.js":"8","/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/ForgotPassword.js":"9","/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/Login.js":"10","/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/Navbar.js":"11","/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/Profile.js":"12","/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/ProfileRandom.js":"13","/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/Chat.js":"14","/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/Activation.js":"15","/goinfre/acamaras/apache2/htdocs/matcha/front/src/utils/useGeoLocation.js":"16","/goinfre/acamaras/apache2/htdocs/matcha/front/src/utils/useGetDistance.js":"17"},{"size":404,"mtime":1663846408826,"results":"18","hashOfConfig":"19"},{"size":3347,"mtime":1663849350782,"results":"20","hashOfConfig":"19"},{"size":4167,"mtime":1663846408826,"results":"21","hashOfConfig":"19"},{"size":723,"mtime":1663849191041,"results":"22","hashOfConfig":"19"},{"size":1601,"mtime":1663846408825,"results":"23","hashOfConfig":"19"},{"size":3338,"mtime":1663846408825,"results":"24","hashOfConfig":"19"},{"size":2409,"mtime":1663846408826,"results":"25","hashOfConfig":"19"},{"size":4451,"mtime":1663846408825,"results":"26","hashOfConfig":"19"},{"size":1886,"mtime":1663846408825,"results":"27","hashOfConfig":"19"},{"size":4259,"mtime":1663847555067,"results":"28","hashOfConfig":"19"},{"size":5576,"mtime":1663846408825,"results":"29","hashOfConfig":"19"},{"size":9626,"mtime":1663846408825,"results":"30","hashOfConfig":"19"},{"size":6472,"mtime":1663846408826,"results":"31","hashOfConfig":"19"},{"size":4282,"mtime":1663846408825,"results":"32","hashOfConfig":"19"},{"size":1343,"mtime":1663846408824,"results":"33","hashOfConfig":"19"},{"size":1565,"mtime":1663846408827,"results":"34","hashOfConfig":"19"},{"size":1326,"mtime":1663846408828,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"t2oa81",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},"/goinfre/acamaras/apache2/htdocs/matcha/front/src/index.js",[],["73","74"],"/goinfre/acamaras/apache2/htdocs/matcha/front/src/App.js",[],"/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/Register.js",[],"/goinfre/acamaras/apache2/htdocs/matcha/front/src/context/UserContext.js",[],"/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/PicturesForm.js",[],"/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/ProfileForm.js",[],"/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/ResetPassword.js",[],"/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/Dashboard.js",[],"/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/ForgotPassword.js",[],"/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/Login.js",[],"/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/Navbar.js",[],"/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/Profile.js",[],"/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/ProfileRandom.js",["75","76","77"],"// /* eslint-disable */\nimport useGetDistance from \"../utils/useGetDistance\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\nimport axios from \"axios\";\nimport StarRating from \"../models/StarRating\";\nimport Gallery from \"../models/Gallery\";\nimport { useCookies } from \"react-cookie\";\nimport img from \"../assets/yellow-heart.png\";\nimport img1 from \"../assets/broken-heart.png\";\n// import img2 from \"../assets/match.png\";\n\nconst ProfileRandom = ({ socket }) => {\n  const { id } = useParams();\n  const { selectedUser, setSelectedUser } = useContext(UserContext);\n  const { user, setUser } = useContext(UserContext);\n  const [pics, setPics] = useState([]);\n  const [likes, setLikes] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(\"\");\n  const [liked, setLiked] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [sender, setSender] = useState(\"\");\n  const [senderId, setSenderId] = useState(\"\");\n  const history = useHistory();\n  const distance = useGetDistance();\n  const [cookie, setCookie] = useCookies([\"refreshToken\"]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/users/${id}`);\n        setSelectedUser(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n\n    const getPicPath = async () => {\n      const response = await axios.get(\n        `http://localhost:5000/user/pictures/${id}`,\n        {}\n      );\n      setPics(response.data);\n    };\n    getPicPath();\n\n    const getLoggedIn = async () => {\n      const response = await axios.get(\n        `http://localhost:5000/user/${cookie.refreshToken}`,\n        {}\n      );\n      setLoggedIn(response.data.id);\n      setSender(response.data.username);\n      setSenderId(response.data.id);\n    };\n    getLoggedIn();\n\n    const count = async () => {\n      try {\n        const response = await axios.get(\n          `http://localhost:5000/user/fame/${id}`\n        );\n        setLikes(response.data.fame);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    count();\n\n    const checkIfLiked = async () => {\n      if (loggedIn !== \"\") {\n        try {\n          const response = await axios.get(\n            `http://localhost:5000/liked/${id}/${loggedIn}`\n          );\n          console.log(\"like\", response.data.msg);\n          setLiked(response.data.msg);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n    checkIfLiked();\n  }, [id, setSelectedUser, setLikes, cookie.refreshToken, loggedIn]);\n\n  const block = async (id) => {\n    try {\n      await axios.post(`http://localhost:5000/block/${loggedIn}/${id}`, {});\n      history.push(\"/dashboard\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleLike = async (id) => {\n    try {\n      const response = await axios.post(\n        `http://localhost:5000/like/${loggedIn}/${id}`,\n        {}\n      );\n      setMessage(response.data.msg);\n    } catch (error) {\n      if (error.response) {\n        console.log(\"error\", error.response.data);\n      }\n    }\n    socket.emit(\"sendNotification\", {\n      senderName: sender,\n      senderId: senderId,\n      receiverName: id,\n      type: \"like\",\n    });\n  };\n\n  const handleDislike = async (id) => {\n    try {\n      const response = await axios.post(\n        `http://localhost:5000/like/${loggedIn}/${id}`,\n        {}\n      );\n      setMessage(response.data.msg);\n    } catch (error) {\n      if (error.response) {\n        console.log(\"error\", error.response.data);\n      }\n    }\n    socket.emit(\"sendNotification\", {\n      senderName: sender,\n      senderId: senderId,\n      receiverName: id,\n      type: \"unlike\",\n    });\n  };\n\n  if (!cookie.refreshToken) {\n    history.push(\"/\");\n  }\n  if (!selectedUser && !distance) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <div>\n        <div className=\"text-center\">\n          <h2 className=\"text-center\">\n            {selectedUser.firstname} {selectedUser.lastname}\n          </h2>\n          <p className=\"card-text\">{selectedUser.username}</p>\n          <p className=\"text-center\">\n            About {distance && Math.round(distance[0]?.distance / 1000)} km away\n          </p>\n          <StarRating rating={likes} />\n          <div className=\"card-img\">\n            <Gallery galleryImages={pics} />\n          </div>\n          <div style={{ margin: \"10%\" }}>\n            <div className=\"card\">\n              <div className=\"heart-container\">\n                {liked && liked === \"dislike\" ? (\n                  <div className=\"like-container\">\n                    <img\n                      onClick={() => handleLike(selectedUser.id)}\n                      className=\"like\"\n                      src={img}\n                      alt=\"Card cap\"\n                    />\n                    <div>\n                      <p className=\"card-text\">{message}</p>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"dislike-container\">\n                    <img\n                      onClick={() => handleDislike(selectedUser.id)}\n                      className=\"dislike\"\n                      src={img1}\n                      alt=\"Card cap\"\n                    />\n                    <div>\n                      <p className=\"card-text\">{message}</p>\n                    </div>\n                  </div>\n                )}\n              </div>{\" \"}\n              <div className=\"card-body\">\n                <label>Age</label>\n                <p className=\"card-text\">{selectedUser.birthdate}</p>\n                <label>Bio</label>\n                <p className=\"card-text\">{selectedUser.bio}</p>\n                <label>Gender</label>\n                <p className=\"card-text\">{selectedUser.gender}</p>\n                <label>Sexual Orientation</label>\n                <p className=\"card-text\">{selectedUser.orientation}</p>\n                <label>Interests</label>\n                <p className=\"card-text\">{selectedUser.interests}</p>\n              </div>\n            </div>{\" \"}\n            <br />\n            <button\n              onClick={() => block(selectedUser.id)}\n              className=\"btn btn-danger\"\n            >\n              Block\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default ProfileRandom;\n","/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/Chat.js",[],"/goinfre/acamaras/apache2/htdocs/matcha/front/src/components/Activation.js",[],"/goinfre/acamaras/apache2/htdocs/matcha/front/src/utils/useGeoLocation.js",[],"/goinfre/acamaras/apache2/htdocs/matcha/front/src/utils/useGetDistance.js",["78"],"// /* eslint-disable */\nimport { useEffect, useState } from \"react\";\nimport { getDistance } from \"geolib\";\nimport { useCookies } from \"react-cookie\";\nimport axios from \"axios\";\nimport useGeoLocation from \"./useGeoLocation\";\n\nconst useGetDistance = () => {\n  const location = useGeoLocation();\n  const [matchLocation, setMatchLocation] = useState([]);\n  const [cookie, setCookie] = useCookies([\"refreshToken\"]);\n\n  useEffect(() => {\n    const getCoordinates = async () => {\n      try {\n        const response = await axios.get(\n          `http://localhost:5000/users/info/${cookie.refreshToken}`\n        );\n        setMatchLocation(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getCoordinates();\n  }, [cookie.refreshToken]);\n\n  if (!location.error) {\n    if (location.coordinates.lat && location.coordinates.lng) {\n      for (let i = 0; i < matchLocation.length; i++) {\n        const distance = getDistance(\n          {\n            latitude: location.coordinates.lat,\n            longitude: location.coordinates.lng,\n          },\n          {\n            latitude: matchLocation[i].geo_lat,\n            longitude: matchLocation[i].geo_long,\n          }\n        );\n        matchLocation[i].distance = distance;\n      }\n    }\n  }\n  return matchLocation;\n};\n\nexport default useGetDistance;\n",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":17,"column":11,"nodeType":"85","messageId":"86","endLine":17,"endColumn":15},{"ruleId":"83","severity":1,"message":"87","line":17,"column":17,"nodeType":"85","messageId":"86","endLine":17,"endColumn":24},{"ruleId":"83","severity":1,"message":"88","line":27,"column":18,"nodeType":"85","messageId":"86","endLine":27,"endColumn":27},{"ruleId":"83","severity":1,"message":"88","line":11,"column":18,"nodeType":"85","messageId":"86","endLine":11,"endColumn":27},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","'setCookie' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]