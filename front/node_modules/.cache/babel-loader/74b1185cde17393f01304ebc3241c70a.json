{"ast":null,"code":"var _jsxFileName = \"/goinfre/acamaras/apache2/htdocs/my-app/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useCookies } from \"react-cookie\";\nimport axios from \"axios\";\nimport Conversations from \"../models/Conversations\";\nimport Message from \"../models/Message\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Chat = _ref => {\n  _s();\n\n  let {\n    socket\n  } = _ref;\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [cookie, setCookie] = useCookies([\"refreshToken\"]);\n  const history = useHistory();\n  const id = useParams().id;\n  const scrollRef = useRef();\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(`http://localhost:5000/newConvo/${id}`);\n        setConversations(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getConversations();\n  }, [id]);\n  useEffect(() => {\n    if (currentChat) {\n      const getMessages = async () => {\n        try {\n          const res = await axios.get(`http://localhost:5000/messages/${currentChat.id}`);\n          setMessages(res.data);\n        } catch (err) {\n          console.log(err);\n        }\n      };\n\n      getMessages();\n    }\n  }, [currentChat]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const receiverId = parseInt(currentChat.user1) !== parseInt(id) ? parseInt(currentChat.user1) : parseInt(currentChat.user2);\n    const message = {\n      sender: id,\n      receiver: receiverId,\n      text: newMessage,\n      chat_id: currentChat.id\n    };\n    socket.emit(\"sendMessage\", {\n      chat_id: currentChat.id,\n      senderId: id,\n      receiverId: receiverId,\n      text: newMessage\n    });\n    setMessages([...messages, message]);\n    setNewMessage(\"\");\n\n    try {\n      await axios.post(\"http://localhost:5000/messages\", message);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  useEffect(() => {\n    if (socket) {\n      socket.on(\"getMessage\", data => {\n        setArrivalMessage({\n          chat_id: data.chat_id,\n          sender: data.senderId,\n          text: data.text,\n          time: Date.now()\n        });\n      });\n    }\n  }, [socket]);\n  useEffect(() => {\n    arrivalMessage && (currentChat === null || currentChat === void 0 ? void 0 : currentChat.id) === (arrivalMessage === null || arrivalMessage === void 0 ? void 0 : arrivalMessage.chat_id) && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n\n  if (!cookie.refreshToken) {\n    history.push(\"/\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messenger\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatMenu\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"chatMenuInput text-center\",\n          children: \" Your Matches \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), conversations && conversations.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setCurrentChat(c),\n          children: /*#__PURE__*/_jsxDEV(Conversations, {\n            conversations: c,\n            currentUser: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)\n        }, uuidv4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatBox\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBoxWrapper\",\n        children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatBoxTop\",\n            children: messages === null || messages === void 0 ? void 0 : messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: scrollRef,\n              children: /*#__PURE__*/_jsxDEV(Message, {\n                message: m,\n                own: m.sender === id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this)\n            }, uuidv4(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatBoxBottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"chatMessageInput\",\n              placeholder: \"write something...\",\n              onChange: e => setNewMessage(e.target.value),\n              value: newMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"chatSubmitButton\",\n              onClick: handleSubmit,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"noConversationText\",\n          children: \"Open a conversation to start a chat.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"p1vZKG9mX17QZqeGOau0OEn35AI=\", true, function () {\n  return [useCookies, useParams];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useParams","useCookies","axios","Conversations","Message","v4","uuidv4","Chat","socket","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","cookie","setCookie","history","useHistory","id","scrollRef","getConversations","res","get","data","err","console","log","getMessages","handleSubmit","e","preventDefault","receiverId","parseInt","user1","user2","message","sender","receiver","text","chat_id","emit","senderId","post","current","scrollIntoView","behavior","on","time","Date","now","prev","refreshToken","push","map","c","m","target","value"],"sources":["/goinfre/acamaras/apache2/htdocs/my-app/src/components/Chat.js"],"sourcesContent":["/* eslint-disable */\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useCookies } from \"react-cookie\";\nimport axios from \"axios\";\nimport Conversations from \"../models/Conversations\";\nimport Message from \"../models/Message\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Chat = ({ socket }) => {\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [cookie, setCookie] = useCookies([\"refreshToken\"]);\n\n  const history = useHistory();\n  const id = useParams().id;\n  const scrollRef = useRef();\n\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(`http://localhost:5000/newConvo/${id}`);\n        setConversations(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getConversations();\n  }, [id]);\n\n  useEffect(() => {\n    if (currentChat) {\n      const getMessages = async () => {\n        try {\n          const res = await axios.get(\n            `http://localhost:5000/messages/${currentChat.id}`\n          );\n          setMessages(res.data);\n        } catch (err) {\n          console.log(err);\n        }\n      };\n      getMessages();\n    }\n  }, [currentChat]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const receiverId =\n      parseInt(currentChat.user1) !== parseInt(id)\n        ? parseInt(currentChat.user1)\n        : parseInt(currentChat.user2);\n\n    const message = {\n      sender: id,\n      receiver: receiverId,\n      text: newMessage,\n      chat_id: currentChat.id,\n    };\n\n    socket.emit(\"sendMessage\", {\n      chat_id: currentChat.id,\n      senderId: id,\n      receiverId: receiverId,\n      text: newMessage,\n    });\n\n    setMessages([...messages, message]);\n    setNewMessage(\"\");\n    try {\n      await axios.post(\"http://localhost:5000/messages\", message);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  useEffect(() => {\n    if (socket) {\n      socket.on(\"getMessage\", (data) => {\n        setArrivalMessage({\n          chat_id: data.chat_id,\n          sender: data.senderId,\n          text: data.text,\n          time: Date.now(),\n        });\n      });\n    }\n  }, [socket]);\n\n  useEffect(() => {\n    arrivalMessage &&\n      currentChat?.id === arrivalMessage?.chat_id &&\n      setMessages((prev) => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n\n  if (!cookie.refreshToken) {\n    history.push(\"/\");\n  }\n\n  return (\n    <div className=\"messenger\">\n      <div className=\"chatMenu\">\n        <div className=\"card\">\n          <p className=\"chatMenuInput text-center\"> Your Matches </p>\n          {conversations &&\n            conversations.map((c) => (\n              <div key={uuidv4()} onClick={() => setCurrentChat(c)}>\n                <Conversations conversations={c} currentUser={id} />\n              </div>\n            ))}\n        </div>\n      </div>\n      <div className=\"chatBox\">\n        <div className=\"chatBoxWrapper\">\n          {currentChat ? (\n            <>\n              <div className=\"chatBoxTop\">\n                {messages?.map((m) => (\n                  <div key={uuidv4()} ref={scrollRef}>\n                    <Message message={m} own={m.sender === id} />\n                  </div>\n                ))}\n              </div>\n              <div className=\"chatBoxBottom\">\n                <textarea\n                  className=\"chatMessageInput\"\n                  placeholder=\"write something...\"\n                  onChange={(e) => setNewMessage(e.target.value)}\n                  value={newMessage}\n                ></textarea>\n                <button className=\"chatSubmitButton\" onClick={handleSubmit}>\n                  Send\n                </button>\n              </div>\n            </>\n          ) : (\n            <span className=\"noConversationText\">\n              Open a conversation to start a chat.\n            </span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}