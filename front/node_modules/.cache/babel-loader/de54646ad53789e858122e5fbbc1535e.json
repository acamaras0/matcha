{"ast":null,"code":"var _jsxFileName = \"/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/front/src/components/Profile.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\nimport { EditText, EditTextarea } from \"react-edit-text\";\nimport \"react-edit-text/dist/index.css\";\nimport StarRating from \"../models/StarRating\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const [loggedIn, setLoggedin] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [expire, setExpire] = useState(\"\");\n  const [pics, setPics] = useState([]);\n  const [newFirstName, setNewFirstName] = useState(\"\");\n  const [newLastName, setNewLastName] = useState(\"\");\n  const history = useHistory(); // const [toggle, setToggle] = useState(true);\n  // const [text, setText] = useState(\"text\");\n  // function toggleInput() {\n  //   setToggle(false);\n  // }\n  // function handleChange(event) {\n  //   setText(event.target.value);\n  // }\n\n  useEffect(() => {\n    refreshToken();\n    getLoggedIn();\n    getPicsById();\n  }, []);\n\n  const refreshToken = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setExpire(decoded.exp);\n    } catch (error) {\n      if (error.response) {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  const axiosJWT = axios.create();\n  axiosJWT.interceptors.request.use(async config => {\n    const currentDate = new Date();\n\n    if (expire * 1000 < currentDate.getTime()) {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n      setToken(response.data.accessToken); //console.log(\"token \",response.data.accessToken);\n\n      const decoded = jwt_decode(response.data.accessToken);\n      setExpire(decoded.exp);\n    }\n\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n\n  const getLoggedIn = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/users\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setLoggedin(response.data);\n  };\n\n  const getPicsById = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/user/pictures\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setPics(response.data);\n  };\n\n  if (pics.length > 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(EditText, {\n      name: \"textbox1\",\n      defaultValue: loggedIn.firstname,\n      inputClassName: \"bg-success form-control\",\n      onSave: value => {\n        setNewFirstName(value);\n        console.log(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EditText, {\n      name: \"textbox1\",\n      defaultValue: loggedIn.lastname,\n      inputClassName: \"bg-success form-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: loggedIn.birthdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n      rating: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card-img-top\",\n        src: pics[0].pic_path,\n        alt: \"Card cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(EditText, {\n          name: \"textbox1\",\n          defaultValue: loggedIn.username,\n          inputClassName: \"bg-success form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Bio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EditTextarea, {\n          name: \"textbox1\",\n          defaultValue: loggedIn.bio,\n          inputClassName: \"bg-success form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EditText, {\n          name: \"textbox1\",\n          defaultValue: loggedIn.gender,\n          inputClassName: \"bg-success form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EditText, {\n          name: \"textbox1\",\n          defaultValue: loggedIn.city,\n          inputClassName: \"bg-success form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Interests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EditText, {\n          name: \"textbox1\",\n          defaultValue: loggedIn.interests,\n          inputClassName: \"bg-success form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading ... \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Profile, \"gDSMXiGlckxNHauqVAMtrj+M/Tg=\", false, function () {\n  return [useHistory];\n});\n\n_c = Profile;\nexport default Profile;\n{\n  /* <h5 className=\"card-title\">{loggedIn.username}</h5>\n            <label>Age</label>\n            <p className=\"card-text\">{loggedIn.birthdate}</p>\n            <label>Bio</label>\n            <p className=\"card-text\">{loggedIn.bio}</p>\n            <label>Gender</label>\n            <p className=\"card-text\">{loggedIn.gender}</p>\n            <label>Location</label>\n            <p className=\"card-text\">{loggedIn.city}</p>\n            <label>Interests</label>\n            <p className=\"card-text\">{loggedIn.interests}</p> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/opt/lampstack-8.1.7-0/apache2/htdocs/matcha-2.0/front/src/components/Profile.js"],"names":["React","useState","useEffect","axios","jwt_decode","useHistory","EditText","EditTextarea","StarRating","Profile","loggedIn","setLoggedin","token","setToken","expire","setExpire","pics","setPics","newFirstName","setNewFirstName","newLastName","setNewLastName","history","refreshToken","getLoggedIn","getPicsById","response","get","data","accessToken","decoded","exp","error","push","axiosJWT","create","interceptors","request","use","config","currentDate","Date","getTime","headers","Authorization","Promise","reject","length","firstname","value","console","log","lastname","birthdate","pic_path","username","bio","gender","city","interests"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\nimport { EditText, EditTextarea } from \"react-edit-text\";\nimport \"react-edit-text/dist/index.css\";\nimport StarRating from \"../models/StarRating\";\n\nconst Profile = () => {\n  const [loggedIn, setLoggedin] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [expire, setExpire] = useState(\"\");\n  const [pics, setPics] = useState([]);\n  const [newFirstName, setNewFirstName] = useState(\"\");\n  const [newLastName, setNewLastName] = useState(\"\");\n  \n  const history = useHistory();\n\n  // const [toggle, setToggle] = useState(true);\n  // const [text, setText] = useState(\"text\");\n\n  // function toggleInput() {\n  //   setToggle(false);\n  // }\n\n  // function handleChange(event) {\n  //   setText(event.target.value);\n  // }\n\n  useEffect(() => {\n    refreshToken();\n    getLoggedIn();\n    getPicsById();\n  }, []);\n\n  const refreshToken = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setExpire(decoded.exp);\n    } catch (error) {\n      if (error.response) {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  const axiosJWT = axios.create();\n\n  axiosJWT.interceptors.request.use(\n    async (config) => {\n      const currentDate = new Date();\n      if (expire * 1000 < currentDate.getTime()) {\n        const response = await axios.get(\"http://localhost:5000/token\");\n        config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n        setToken(response.data.accessToken);\n        //console.log(\"token \",response.data.accessToken);\n        const decoded = jwt_decode(response.data.accessToken);\n        setExpire(decoded.exp);\n      }\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  const getLoggedIn = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/users\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    setLoggedin(response.data);\n  };\n\n  const getPicsById = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/user/pictures\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    setPics(response.data);\n  };\n\n  if (pics.length > 0)\n    return (\n      <div className=\"text-center\">\n        <EditText\n          name=\"textbox1\"\n          defaultValue={loggedIn.firstname}\n          inputClassName=\"bg-success form-control\"\n          onSave={(value) => {\n            setNewFirstName(value);\n            console.log(value);\n          }}\n        />\n        <EditText\n          name=\"textbox1\"\n          defaultValue={loggedIn.lastname}\n          inputClassName=\"bg-success form-control\"\n        />\n        <p>{loggedIn.birthdate}</p>\n\n        {/* <EditTextarea /> */}\n        <h2 className=\"text-center\">\n          {/* {toggle ? (\n            <p onDoubleClick={toggleInput}>{text}</p>\n          ) : (\n            <input type=\"text\" value={text} onChange={handleChange} />\n          )} */}\n          {/* {loggedIn.firstname} {loggedIn.lastname} */}\n        </h2>\n        <StarRating rating={5} />\n        <div className=\"card-profile\">\n          <img className=\"card-img-top\" src={pics[0].pic_path} alt=\"Card cap\" />\n          <div className=\"card-body\">\n            <EditText\n              name=\"textbox1\"\n              defaultValue={loggedIn.username}\n              inputClassName=\"bg-success form-control\"\n            />\n            <label>Bio</label>\n            <EditTextarea\n              name=\"textbox1\"\n              defaultValue={loggedIn.bio}\n              inputClassName=\"bg-success form-control\"\n            />\n            <label>Gender</label>\n            <EditText\n              name=\"textbox1\"\n              defaultValue={loggedIn.gender}\n              inputClassName=\"bg-success form-control\"\n            />\n            <label>Location</label>\n            <EditText\n              name=\"textbox1\"\n              defaultValue={loggedIn.city}\n              inputClassName=\"bg-success form-control\"\n            />\n            <label>Interests</label>\n            <EditText\n              name=\"textbox1\"\n              defaultValue={loggedIn.interests}\n              inputClassName=\"bg-success form-control\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  return <div>Loading ... </div>;\n};\n\nexport default Profile;\n\n{\n  /* <h5 className=\"card-title\">{loggedIn.username}</h5>\n            <label>Age</label>\n            <p className=\"card-text\">{loggedIn.birthdate}</p>\n            <label>Bio</label>\n            <p className=\"card-text\">{loggedIn.bio}</p>\n            <label>Gender</label>\n            <p className=\"card-text\">{loggedIn.gender}</p>\n            <label>Location</label>\n            <p className=\"card-text\">{loggedIn.city}</p>\n            <label>Interests</label>\n            <p className=\"card-text\">{loggedIn.interests}</p> */\n}\n"]},"metadata":{},"sourceType":"module"}